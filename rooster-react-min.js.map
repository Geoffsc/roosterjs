{"version":3,"sources":["webpack://roosterjsReact/webpack/bootstrap","webpack://roosterjsReact/external \"roosterjs\"","webpack://roosterjsReact/external \"FluentUIReact\"","webpack://roosterjsReact/external \"React\"","webpack://roosterjsReact/./packages-ui/roosterjs-react/lib/common/utils/getLocalizedString.ts","webpack://roosterjsReact/./packages-ui/roosterjs-react/lib/common/index.ts","webpack://roosterjsReact/./packages-ui/roosterjs-react/lib/rooster/type/UpdateMode.ts","webpack://roosterjsReact/./packages-ui/roosterjs-react/lib/ribbon/type/KnownRibbonButton.ts","webpack://roosterjsReact/./packages-ui/roosterjs-react/lib/ribbon/component/buttons/colorPicker.tsx","webpack://roosterjsReact/./packages-ui/roosterjs-react/lib/index.ts","webpack://roosterjsReact/./packages-ui/roosterjs-react/lib/common/utils/createUIUtilities.tsx","webpack://roosterjsReact/external \"ReactDOM\"","webpack://roosterjsReact/./packages-ui/roosterjs-react/lib/rooster/index.ts","webpack://roosterjsReact/./packages-ui/roosterjs-react/lib/rooster/component/Rooster.tsx","webpack://roosterjsReact/./packages-ui/roosterjs-react/lib/rooster/plugin/createUpdateContentPlugin.ts","webpack://roosterjsReact/./packages-ui/roosterjs-react/lib/ribbon/index.ts","webpack://roosterjsReact/./packages-ui/roosterjs-react/lib/ribbon/component/Ribbon.tsx","webpack://roosterjsReact/./packages-ui/roosterjs-react/lib/ribbon/component/buttons/moreCommands.ts","webpack://roosterjsReact/./packages-ui/roosterjs-react/lib/ribbon/component/getButtons.ts","webpack://roosterjsReact/./packages-ui/roosterjs-react/lib/ribbon/component/buttons/alignCenter.ts","webpack://roosterjsReact/./packages-ui/roosterjs-react/lib/ribbon/component/buttons/alignLeft.ts","webpack://roosterjsReact/./packages-ui/roosterjs-react/lib/ribbon/component/buttons/alignRight.ts","webpack://roosterjsReact/./packages-ui/roosterjs-react/lib/ribbon/component/buttons/backgroundColor.ts","webpack://roosterjsReact/./packages-ui/roosterjs-react/lib/ribbon/component/buttons/bold.ts","webpack://roosterjsReact/./packages-ui/roosterjs-react/lib/ribbon/component/buttons/bulletedList.ts","webpack://roosterjsReact/./packages-ui/roosterjs-react/lib/ribbon/component/buttons/clearFormat.ts","webpack://roosterjsReact/./packages-ui/roosterjs-react/lib/ribbon/component/buttons/code.ts","webpack://roosterjsReact/./packages-ui/roosterjs-react/lib/ribbon/component/buttons/decreaseFontSize.ts","webpack://roosterjsReact/./packages-ui/roosterjs-react/lib/ribbon/component/buttons/decreaseIndent.ts","webpack://roosterjsReact/./packages-ui/roosterjs-react/lib/ribbon/component/buttons/font.ts","webpack://roosterjsReact/./packages-ui/roosterjs-react/lib/ribbon/component/buttons/fontSize.ts","webpack://roosterjsReact/./packages-ui/roosterjs-react/lib/ribbon/component/buttons/header.ts","webpack://roosterjsReact/./packages-ui/roosterjs-react/lib/ribbon/component/buttons/increaseFontSize.ts","webpack://roosterjsReact/./packages-ui/roosterjs-react/lib/ribbon/component/buttons/increaseIndent.ts","webpack://roosterjsReact/./packages-ui/roosterjs-react/lib/ribbon/component/buttons/insertImage.ts","webpack://roosterjsReact/./packages-ui/roosterjs-react/lib/ribbon/component/buttons/insertLink.tsx","webpack://roosterjsReact/./packages-ui/roosterjs-react/lib/ribbon/component/buttons/insertTable.tsx","webpack://roosterjsReact/./packages-ui/roosterjs-react/lib/ribbon/component/buttons/italic.ts","webpack://roosterjsReact/./packages-ui/roosterjs-react/lib/ribbon/component/buttons/ltr.ts","webpack://roosterjsReact/./packages-ui/roosterjs-react/lib/ribbon/component/buttons/numberedList.ts","webpack://roosterjsReact/./packages-ui/roosterjs-react/lib/ribbon/component/buttons/quote.ts","webpack://roosterjsReact/./packages-ui/roosterjs-react/lib/ribbon/component/buttons/redo.ts","webpack://roosterjsReact/./packages-ui/roosterjs-react/lib/ribbon/component/buttons/removeLink.ts","webpack://roosterjsReact/./packages-ui/roosterjs-react/lib/ribbon/component/buttons/rtl.ts","webpack://roosterjsReact/./packages-ui/roosterjs-react/lib/ribbon/component/buttons/strikethrough.ts","webpack://roosterjsReact/./packages-ui/roosterjs-react/lib/ribbon/component/buttons/subscript.ts","webpack://roosterjsReact/./packages-ui/roosterjs-react/lib/ribbon/component/buttons/superscript.ts","webpack://roosterjsReact/./packages-ui/roosterjs-react/lib/ribbon/component/buttons/textColor.ts","webpack://roosterjsReact/./packages-ui/roosterjs-react/lib/ribbon/component/buttons/underline.ts","webpack://roosterjsReact/./packages-ui/roosterjs-react/lib/ribbon/component/buttons/undo.ts","webpack://roosterjsReact/./packages-ui/roosterjs-react/lib/ribbon/plugin/createRibbonPlugin.ts"],"names":["installedModules","__webpack_require__","moduleId","exports","module","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","roosterjs","FluentUIReact","React","strings","defaultString","str","default","UpdateMode","KnownRibbonButtonKey","BackgroundColorDropDownItems","backgroundColorCyan","backgroundColorGreen","backgroundColorYellow","backgroundColorOrange","backgroundColorRed","backgroundColorMagenta","backgroundColorLightCyan","backgroundColorLightGreen","backgroundColorLightYellow","backgroundColorLightOrange","backgroundColorLightRed","backgroundColorLightMagenta","backgroundColorWhite","backgroundColorLightGray","backgroundColorGray","backgroundColorDarkGray","backgroundColorDarkerGray","backgroundColorBlack","classNames","mergeStyleSets","colorPickerContainer","width","padding","overflow","colorMenuItem","display","height","minWidth","background","border","colorSquare","margin","borderStyle","borderWidth","borderColor","colorSquareBorder","colorSquareBorderWhite","TextColors","textColorLightBlue","lightModeColor","darkModeColor","textColorLightGreen","textColorLightYellow","textColorLightOrange","textColorLightRed","textColorLightPurple","textColorBlue","textColorGreen","textColorYellow","textColorOrange","textColorRed","textColorPurple","textColorDarkBlue","textColorDarkGreen","textColorDarkYellow","textColorDarkOrange","textColorDarkRed","textColorDarkPurple","textColorDarkerBlue","textColorDarkerGreen","textColorDarkerYellow","textColorDarkerOrange","textColorDarkerRed","textColorDarkerPurple","textColorWhite","textColorLightGray","textColorGray","textColorDarkGray","textColorDarkerGray","textColorBlack","BackgroundColors","AllColors","getColorPickerDropDown","items","itemClassName","allowLivePreview","itemRender","item","onClick","buttonColor","e","title","text","className","style","backgroundColor","commandBarSubMenuProperties","container","theme","renderComponent","element","doc","ownerDocument","div","createElement","body","appendChild","ReactDOM","render","WindowProvider","window","defaultView","ThemeProvider","unmountComponentAtNode","removeChild","isRightToLeft","getComputedStyles","defaultEditorCreator","options","Editor","props","editorDiv","useRef","editor","useTheme","focusOnInit","editorCreator","zoomScale","inDarkMode","plugins","useEffect","createUIUtilities","current","forEach","plugin","setUIUtilities","isReactEditorPlugin","focus","dispose","setDarkModeState","setZoomScale","divProps","getNativeProps","divProperties","ref","tabIndex","updateMode","onUpdate","onBlur","update","OnBlur","getName","initialize","this","disposer","addDomEventHandler","onPluginEvent","event","eventType","OnInitialize","OnDispose","OnContentChangedEvent","OnUserInput","forceUpdate","Force","content","getContent","UpdateContentPluginImpl","AllButtonKeys","ribbonClassName","mergeStyles","rtlIcon","transform","buttons","dir","useState","formatState","setFormatState","isRtl","useCallback","_","onButtonClick","data","onHover","button","startLivePreview","onDismiss","stopLivePreview","flipIcon","defaultRender","commandBarItems","useMemo","map","selectedItem","dropDownMenu","getSelectedItemKey","result","iconProps","iconName","onRenderIcon","flipWhenRtl","undefined","iconOnly","unlocalizedText","ariaLabel","canCheck","checked","isChecked","disabled","isDisabled","commandBarProperties","subMenuProps","shouldFocusOnMount","focusZoneProps","direction","FocusZoneDirection","bidirectional","onItemClick","onRenderContextualMenuItem","defaultRenderer","onMouseOver","keys","onRender","registerFormatChangedCallback","moreCommandsBtn","moreCommands","CommandBar","overflowButtonProps","KnownRibbonButtons","Bold","bold","Italic","italic","Underline","underline","Font","font","FontSize","fontSize","IncreaseFontSize","increaseFontSize","DecreaseFontSize","decreaseFontSize","TextColor","textColor","BackgroundColor","BulletedList","bulletedList","NumberedList","numberedList","DecreaseIndent","decreaseIndent","IncreaseIndent","increaseIndent","Quote","quote","AlignLeft","alignLeft","AlignCenter","alignCenter","AlignRight","alignRight","InsertLink","insertLink","RemoveLink","removeLink","InsertTable","insertTable","InsertImage","insertImage","Superscript","superscript","Subscript","subscript","Strikethrough","strikethrough","Header","header","Code","code","Ltr","ltr","Rtl","rtl","Undo","undo","Redo","redo","ClearFormat","clearFormat","keyOrButtons","keyOrButton","setAlignment","setBackgroundColor","isBold","toggleBold","isBullet","toggleBullet","toggleCodeBlock","changeFontSize","setIndentation","FontNames","family","localizedName","DropDownItems","reduce","LowerCaseFontMap","toLowerCase","FirstFontRegex","matches","fontName","match","firstName","setFontName","FONT_SIZES","size","toString","setFontSize","headers","header1","header2","header3","header4","header5","header6","headerDivider","noHeader","headerLevel","index","indexOf","toggleHeader","FileInput","tag","attributes","type","accept","document","getDocument","fileInput","addEventListener","files","length","click","uiUtilities","existingLink","queryElements","url","href","displayText","textContent","getSelectionRange","InsertLinkDialog","initUrl","initDisplayText","linkInput","borderRadius","setUrl","setDisplayText","isChanged","setIsChanged","urlInput","displayTextInput","dialogContentProps","DialogType","normal","onOk","createLink","onCancel","onDisplayTextChanged","onUrlChanged","onKeyPress","which","Dialog","hidden","htmlFor","id","role","onChange","autoFocus","DialogFooter","PrimaryButton","DefaultButton","tableButton","cursor","hovered","tablePane","tablePaneInner","lineHeight","InsertTablePane","col","setCol","row","setRow","updateSize","safeInstanceOf","parseInt","dataset","onMouseEnter","target","onClickButton","createKey","ariaLabels","j","formatText","isSelected","push","FocusZone","defaultActiveElement","onActiveElementChanged","replace","split","parseKey","insertTablePane","isItalic","toggleItalic","setDirection","isNumbering","toggleNumbering","isBlockQuote","toggleBlockQuote","canRedo","canUnlink","isStrikeThrough","toggleStrikethrough","isSubscript","toggleSubscript","isSuperscript","toggleSuperscript","setTextColor","isUnderline","toggleUnderline","canUndo","delayUpdateTime","timer","updateFormat","delayUpdate","callback","onFormatChanged","stopShadowEdit","isInShadowEdit","range","getSelectionRangeEx","areAllCollapsed","startShadowEdit","clearTimeout","setTimeout","getFormatState","some","RibbonPluginImpl"],"mappings":"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","file":"rooster-react-min.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 8);\n","module.exports = roosterjs;","module.exports = FluentUIReact;","module.exports = React;","import { LocalizedStrings } from '../type/LocalizedStrings';\n\n/**\n * Get a localized string\n * @param strings The LocalizedStrings map\n * @param key Key of the string\n * @param defaultString Default unlocalized string, will be used if strings is not specified or the give key doesn't exist in strings\n * @returns A localized string from the string map, or defaultString\n */\nexport default function getLocalizedString<T extends string>(\n    strings: Partial<LocalizedStrings<T>>,\n    key: T,\n    defaultString: string\n) {\n    const str = strings?.[key];\n\n    if (typeof str == 'function') {\n        return str();\n    } else if (typeof str == 'string') {\n        return str;\n    } else {\n        return defaultString;\n    }\n}\n","export {\n    LocalizedStrings,\n    OkButtonStringKey,\n    CancelButtonStringKey,\n} from './type/LocalizedStrings';\nexport { default as UIUtilities } from './type/UIUtilities';\nexport { default as ReactEditorPlugin } from './type/ReactEditorPlugin';\nexport { default as createUIUtilities } from './utils/createUIUtilities';\nexport { default as getLocalizedString } from './utils/getLocalizedString';\n","/**\n * Update mode for UpdateContentPlugins\n */\nexport enum UpdateMode {\n    /**\n     * Force update, triggered from UpdateContentPlugin.forceUpdate()\n     */\n    Force = 0,\n\n    /**\n     * Update when editor is initialized\n     */\n    OnInitialize = 1,\n\n    /**\n     * Update when editor is about to be disposed\n     */\n    OnDispose = 2,\n\n    /**\n     * Update when user input in editor\n     */\n    OnUserInput = 4,\n\n    /**\n     * Update when ContentChangedEvent is triggered from a plugin\n     */\n    OnContentChangedEvent = 8,\n\n    /**\n     * Update when editor loses focus\n     */\n    OnBlur = 16,\n}\n","/**\n * Keys of known ribbon buttons (buttons included in roosterjs-react)\n */\nexport enum KnownRibbonButtonKey {\n    /**\n     * \"Bold\" button on the format ribbon\n     */\n    Bold,\n\n    /**\n     * \"Italic\" button on the format ribbon\n     */\n    Italic,\n\n    /**\n     * \"Underline\" button on the format ribbon\n     */\n    Underline,\n\n    /**\n     * \"Font\" button on the format ribbon\n     */\n    Font,\n\n    /**\n     * \"FontSize\" button on the format ribbon\n     */\n    FontSize,\n\n    /**\n     * \"IncreaseFontSize\" button on the format ribbon\n     */\n    IncreaseFontSize,\n\n    /**\n     * \"DecreaseFontSize\" button on the format ribbon\n     */\n    DecreaseFontSize,\n\n    /**\n     * \"TextColor\" button on the format ribbon\n     */\n    TextColor,\n\n    /**\n     * \"BackgroundColor\" button on the format ribbon\n     */\n    BackgroundColor,\n\n    /**\n     * \"BulletedList\" button on the format ribbon\n     */\n    BulletedList,\n\n    /**\n     * \"NumberedList\" button on the format ribbon\n     */\n    NumberedList,\n\n    /**\n     * \"DecreaseIndent\" button on the format ribbon\n     */\n    DecreaseIndent,\n\n    /**\n     * \"IncreaseIndent\" button on the format ribbon\n     */\n    IncreaseIndent,\n\n    /**\n     * \"Quote\" button on the format ribbon\n     */\n    Quote,\n\n    /**\n     * \"AlignLeft\" button on the format ribbon\n     */\n    AlignLeft,\n\n    /**\n     * \"AlignCenter\" button on the format ribbon\n     */\n    AlignCenter,\n\n    /**\n     * \"AlignRight\" button on the format ribbon\n     */\n    AlignRight,\n\n    /**\n     * \"InsertLink\" button on the format ribbon\n     */\n    InsertLink,\n\n    /**\n     * \"RemoveLink\" button on the format ribbon\n     */\n    RemoveLink,\n\n    /**\n     * \"InsertTable\" button on the format ribbon\n     */\n    InsertTable,\n\n    /**\n     * \"InsertImage\" button on the format ribbon\n     */\n    InsertImage,\n\n    /**\n     * \"Superscript\" button on the format ribbon\n     */\n    Superscript,\n\n    /**\n     * \"Subscript\" button on the format ribbon\n     */\n    Subscript,\n\n    /**\n     * \"Strikethrough\" button on the format ribbon\n     */\n    Strikethrough,\n\n    /**\n     * \"Header\" button on the format ribbon\n     */\n    Header,\n\n    /**\n     * \"Code\" button on the format ribbon\n     */\n    Code,\n\n    /**\n     * \"Ltr\" button on the format ribbon\n     */\n    Ltr,\n\n    /**\n     * \"Rtl\" button on the format ribbon\n     */\n    Rtl,\n\n    /**\n     * \"Undo\" button on the format ribbon\n     */\n    Undo,\n\n    /**\n     * \"Redo\" button on the format ribbon\n     */\n    Redo,\n\n    /**\n     * \"ClearFormat\" button on the format ribbon\n     */\n    ClearFormat,\n}\n","import * as React from 'react';\nimport RibbonButtonDropDown from '../../type/RibbonButtonDropDown';\nimport { BackgroundColorKeys, TextColorKeys } from '../../type/RibbonButtonStringKeys';\nimport { mergeStyleSets } from '@fluentui/react/lib/Styling';\nimport { ModeIndependentColor } from 'roosterjs-editor-types';\n\n/**\n * @internal\n * List of colors in drop down list\n */\nexport const BackgroundColorDropDownItems: Record<BackgroundColorKeys, string> = {\n    backgroundColorCyan: 'Cyan',\n    backgroundColorGreen: 'Green',\n    backgroundColorYellow: 'Yellow',\n    backgroundColorOrange: 'Orange',\n    backgroundColorRed: 'Red',\n    backgroundColorMagenta: 'Magenta',\n    backgroundColorLightCyan: 'Light cyan',\n    backgroundColorLightGreen: 'Light green',\n    backgroundColorLightYellow: 'Light yellow',\n    backgroundColorLightOrange: 'Light orange',\n    backgroundColorLightRed: 'Light red',\n    backgroundColorLightMagenta: 'Light magenta',\n    backgroundColorWhite: 'White',\n    backgroundColorLightGray: 'Light gray',\n    backgroundColorGray: 'Gray',\n    backgroundColorDarkGray: 'Dark gray',\n    backgroundColorDarkerGray: 'Darker gray',\n    backgroundColorBlack: 'Black',\n};\n\nconst classNames = mergeStyleSets({\n    colorPickerContainer: {\n        width: '192px',\n        padding: '8px',\n        overflow: 'hidden',\n        '& ul': {\n            width: '192px',\n            overflow: 'hidden',\n        },\n    },\n    colorMenuItem: {\n        display: 'inline-block',\n        width: '32px',\n        height: '32px',\n        '& button': {\n            padding: '0px',\n            minWidth: '0px',\n            background: 'transparent',\n            border: 'none',\n        },\n    },\n    colorSquare: {\n        width: '20px',\n        height: '20px',\n        margin: '4px',\n        borderStyle: 'solid',\n        borderWidth: '2px',\n        '&:hover': {\n            borderColor: 'red',\n        },\n    },\n    colorSquareBorder: {\n        borderColor: 'transparent',\n    },\n    colorSquareBorderWhite: {\n        borderColor: '#bebebe',\n    },\n});\n\n/**\n * @internal\n */\nconst TextColors: { [key in TextColorKeys]: ModeIndependentColor } = {\n    textColorLightBlue: { lightModeColor: '#51a7f9', darkModeColor: '#0075c2' },\n    textColorLightGreen: { lightModeColor: '#6fc040', darkModeColor: '#207a00' },\n    textColorLightYellow: { lightModeColor: '#f5d427', darkModeColor: '#5d4d00' },\n    textColorLightOrange: { lightModeColor: '#f3901d', darkModeColor: '#ab5500' },\n    textColorLightRed: { lightModeColor: '#ed5c57', darkModeColor: '#df504d' },\n    textColorLightPurple: { lightModeColor: '#b36ae2', darkModeColor: '#ab63da' },\n    textColorBlue: { lightModeColor: '#0c64c0', darkModeColor: '#6da0ff' },\n    textColorGreen: { lightModeColor: '#0c882a', darkModeColor: '#3da848' },\n    textColorYellow: { lightModeColor: '#dcbe22', darkModeColor: '#6d5c00' },\n    textColorOrange: { lightModeColor: '#de6a19', darkModeColor: '#d3610c' },\n    textColorRed: { lightModeColor: '#c82613', darkModeColor: '#ff6847' },\n    textColorPurple: { lightModeColor: '#763e9b', darkModeColor: '#d394f9' },\n    textColorDarkBlue: { lightModeColor: '#174e86', darkModeColor: '#93b8f9' },\n    textColorDarkGreen: { lightModeColor: '#0f5c1a', darkModeColor: '#7fc57b' },\n    textColorDarkYellow: { lightModeColor: '#c3971d', darkModeColor: '#946f00' },\n    textColorDarkOrange: { lightModeColor: '#be5b17', darkModeColor: '#de7633' },\n    textColorDarkRed: { lightModeColor: '#861106', darkModeColor: '#ff9b7c' },\n    textColorDarkPurple: { lightModeColor: '#5e327c', darkModeColor: '#dea9fd' },\n    textColorDarkerBlue: { lightModeColor: '#002451', darkModeColor: '#cedbff' },\n    textColorDarkerGreen: { lightModeColor: '#06400c', darkModeColor: '#a3da9b' },\n    textColorDarkerYellow: { lightModeColor: '#a37519', darkModeColor: '#b5852a' },\n    textColorDarkerOrange: { lightModeColor: '#934511', darkModeColor: '#ef935c' },\n    textColorDarkerRed: { lightModeColor: '#570606', darkModeColor: '#ffc0b1' },\n    textColorDarkerPurple: { lightModeColor: '#3b204d', darkModeColor: '#eecaff' },\n    textColorWhite: { lightModeColor: '#ffffff', darkModeColor: '#333333' },\n    textColorLightGray: { lightModeColor: '#cccccc', darkModeColor: '#535353' },\n    textColorGray: { lightModeColor: '#999999', darkModeColor: '#777777' },\n    textColorDarkGray: { lightModeColor: '#666666', darkModeColor: '#a0a0a0' },\n    textColorDarkerGray: { lightModeColor: '#333333', darkModeColor: '#cfcfcf' },\n    textColorBlack: { lightModeColor: '#000000', darkModeColor: '#ffffff' },\n};\n\n/**\n * @internal\n */\nconst BackgroundColors: { [key in BackgroundColorKeys]: ModeIndependentColor } = {\n    backgroundColorCyan: { lightModeColor: '#00ffff', darkModeColor: '#005357' },\n    backgroundColorGreen: { lightModeColor: '#00ff00', darkModeColor: '#005e00' },\n    backgroundColorYellow: { lightModeColor: '#ffff00', darkModeColor: '#383e00' },\n    backgroundColorOrange: { lightModeColor: '#ff8000', darkModeColor: '#bf4c00' },\n    backgroundColorRed: { lightModeColor: '#ff0000', darkModeColor: '#ff2711' },\n    backgroundColorMagenta: { lightModeColor: '#ff00ff', darkModeColor: '#e700e8' },\n    backgroundColorLightCyan: { lightModeColor: '#80ffff', darkModeColor: '#004c4f' },\n    backgroundColorLightGreen: { lightModeColor: '#80ff80', darkModeColor: '#005400' },\n    backgroundColorLightYellow: { lightModeColor: '#ffff80', darkModeColor: '#343c00' },\n    backgroundColorLightOrange: { lightModeColor: '#ffc080', darkModeColor: '#77480b' },\n    backgroundColorLightRed: { lightModeColor: '#ff8080', darkModeColor: '#bc454a' },\n    backgroundColorLightMagenta: { lightModeColor: '#ff80ff', darkModeColor: '#aa2bad' },\n    backgroundColorWhite: { lightModeColor: '#ffffff', darkModeColor: '#333333' },\n    backgroundColorLightGray: { lightModeColor: '#cccccc', darkModeColor: '#535353' },\n    backgroundColorGray: { lightModeColor: '#999999', darkModeColor: '#777777' },\n    backgroundColorDarkGray: { lightModeColor: '#666666', darkModeColor: '#a0a0a0' },\n    backgroundColorDarkerGray: { lightModeColor: '#333333', darkModeColor: '#cfcfcf' },\n    backgroundColorBlack: { lightModeColor: '#000000', darkModeColor: '#ffffff' },\n};\n\n/**\n * @internal\n */\ntype AllColorKeys = TextColorKeys | BackgroundColorKeys;\n\nconst AllColors: { [key in AllColorKeys]: ModeIndependentColor } = {\n    ...TextColors,\n    ...BackgroundColors,\n};\n\n/**\n * @internal\n * Common part of a color picker button\n */\nfunction getColorPickerDropDown(items: Record<string, string>): RibbonButtonDropDown {\n    return {\n        items,\n        itemClassName: classNames.colorMenuItem,\n        allowLivePreview: true,\n        itemRender: (item, onClick) => {\n            const key = item.key as AllColorKeys;\n            const buttonColor = AllColors[key].lightModeColor;\n            return (\n                <button onClick={e => onClick(e, item)} title={item.text}>\n                    <div\n                        className={\n                            classNames.colorSquare +\n                            ' ' +\n                            (key == 'textColorWhite' || key == 'backgroundColorWhite'\n                                ? classNames.colorSquareBorderWhite\n                                : classNames.colorSquareBorder)\n                        }\n                        style={{\n                            backgroundColor: buttonColor,\n                        }}></div>\n                </button>\n            );\n        },\n        commandBarSubMenuProperties: {\n            className: classNames.colorPickerContainer,\n        },\n    };\n}\n\nexport { TextColors, BackgroundColors, getColorPickerDropDown };\n","export * from './common/index';\nexport * from './rooster/index';\nexport * from './ribbon/index';\n","import * as React from 'react';\nimport * as ReactDOM from 'react-dom';\nimport UIUtilities from '../type/UIUtilities';\nimport { getComputedStyles } from 'roosterjs-editor-dom';\nimport { PartialTheme, ThemeProvider } from '@fluentui/react/lib/Theme';\nimport { WindowProvider } from '@fluentui/react/lib/WindowProvider';\n\n/**\n * Create the UI Utilities object for plugins to render additional react components\n * @param container Container DIV of editor\n * @param theme Current theme used by editor\n * @returns A UIUtilities object\n */\nexport default function createUIUtilities(\n    container: HTMLDivElement,\n    theme: PartialTheme\n): UIUtilities {\n    return {\n        renderComponent: element => {\n            const doc = container.ownerDocument;\n            const div = doc.createElement('div');\n            doc.body.appendChild(div);\n\n            ReactDOM.render(\n                <WindowProvider window={doc.defaultView}>\n                    <ThemeProvider theme={theme}>{element}</ThemeProvider>\n                </WindowProvider>,\n                div\n            );\n\n            return () => {\n                ReactDOM.unmountComponentAtNode(div);\n                doc.body.removeChild(div);\n            };\n        },\n        isRightToLeft: () => {\n            const dir = container && getComputedStyles(container, 'direction')[0];\n\n            return dir == 'rtl';\n        },\n    };\n}\n","module.exports = ReactDOM;","export { default as RoosterProps } from './type/RoosterProps';\nexport { UpdateMode } from './type/UpdateMode';\nexport { default as UpdateContentPlugin } from './type/UpdateContentPlugin';\n\nexport { default as Rooster } from './component/Rooster';\n\nexport { default as createUpdateContentPlugin } from './plugin/createUpdateContentPlugin';\n","import * as React from 'react';\nimport RoosterProps from '../type/RoosterProps';\nimport { createUIUtilities, ReactEditorPlugin } from '../../common/index';\nimport { divProperties, getNativeProps } from '@fluentui/react/lib/Utilities';\nimport { Editor } from 'roosterjs-editor-core';\nimport { EditorOptions, EditorPlugin, IEditor } from 'roosterjs-editor-types';\nimport { useTheme } from '@fluentui/react/lib/Theme';\n\n/**\n * Main component of react wrapper for roosterjs\n * @param props Properties of this component\n * @returns The react component\n */\nexport default function Rooster(props: RoosterProps) {\n    const editorDiv = React.useRef<HTMLDivElement>(null);\n    const editor = React.useRef<IEditor>(null);\n    const theme = useTheme();\n\n    const { focusOnInit, editorCreator, zoomScale, inDarkMode, plugins } = props;\n\n    React.useEffect(() => {\n        if (plugins) {\n            const uiUtilities = createUIUtilities(editorDiv.current, theme);\n\n            plugins.forEach(plugin => {\n                if (isReactEditorPlugin(plugin)) {\n                    plugin.setUIUtilities(uiUtilities);\n                }\n            });\n        }\n    }, [theme, editorCreator]);\n\n    React.useEffect(() => {\n        editor.current = (editorCreator || defaultEditorCreator)(editorDiv.current, props);\n\n        if (focusOnInit) {\n            editor.current.focus();\n        }\n\n        return () => {\n            if (editor.current) {\n                editor.current.dispose();\n                editor.current = null;\n            }\n        };\n    }, [editorCreator]);\n\n    React.useEffect(() => {\n        editor.current.setDarkModeState(!!inDarkMode);\n    }, [inDarkMode]);\n\n    React.useEffect(() => {\n        editor.current.setZoomScale(zoomScale);\n    }, [zoomScale]);\n\n    const divProps = getNativeProps<React.HTMLAttributes<HTMLDivElement>>(props, divProperties);\n    return <div ref={editorDiv} tabIndex={0} {...(divProps || {})}></div>;\n}\n\nfunction defaultEditorCreator(div: HTMLDivElement, options: EditorOptions) {\n    return new Editor(div, options);\n}\n\nfunction isReactEditorPlugin(plugin: EditorPlugin): plugin is ReactEditorPlugin {\n    return !!(plugin as ReactEditorPlugin)?.setUIUtilities;\n}\n","import UpdateContentPlugin from '../type/UpdateContentPlugin';\nimport { IEditor, PluginEvent, PluginEventType } from 'roosterjs-editor-types';\nimport { UpdateMode } from '../type/UpdateMode';\n\n/**\n * A plugin to help get HTML content from editor\n */\nclass UpdateContentPluginImpl implements UpdateContentPlugin {\n    private editor: IEditor;\n    private disposer: () => void;\n\n    /**\n     * Create a new instance of UpdateContentPlugin class\n     * @param updateMode Mode of automatic update. It can be a combination of multiple UpdateMode values\n     * @param onUpdate A callback to be invoked when update happens\n     */\n    constructor(\n        private updateMode: UpdateMode,\n        private onUpdate: (html: string, mode: UpdateMode) => void\n    ) {}\n\n    /**\n     * Get a friendly name of this plugin\n     */\n    getName() {\n        return 'UpdateContent';\n    }\n\n    /**\n     * Initialize this plugin\n     * @param editor The editor instance\n     */\n    initialize(editor: IEditor) {\n        this.editor = editor;\n        this.disposer = this.editor.addDomEventHandler('blur', this.onBlur);\n    }\n\n    /**\n     * Dispose this plugin\n     */\n    dispose() {\n        this.disposer?.();\n        this.disposer = null;\n        this.editor = null;\n    }\n\n    /**\n     * Handle events triggered from editor\n     * @param event PluginEvent object\n     */\n    onPluginEvent(event: PluginEvent) {\n        switch (event.eventType) {\n            case PluginEventType.EditorReady:\n                this.update(UpdateMode.OnInitialize);\n                break;\n\n            case PluginEventType.BeforeDispose:\n                this.update(UpdateMode.OnDispose);\n                break;\n\n            case PluginEventType.ContentChanged:\n                this.update(UpdateMode.OnContentChangedEvent);\n                break;\n\n            case PluginEventType.Input:\n                this.update(UpdateMode.OnUserInput);\n                break;\n        }\n    }\n\n    /**\n     * Trigger a force update. onUpdate callback will be invoked with HTML content of editor\n     */\n    forceUpdate() {\n        this.update(UpdateMode.Force);\n    }\n\n    private onBlur = () => {\n        this.update(UpdateMode.OnBlur);\n    };\n\n    private update(mode: UpdateMode) {\n        if (\n            this.editor &&\n            (mode == UpdateMode.Force || ((this.updateMode || 0) & mode) == mode) &&\n            this.onUpdate\n        ) {\n            const content = this.editor.getContent();\n            this.onUpdate(content, mode);\n        }\n    }\n}\n\n/**\n * Create a new instance of UpdateContentPlugin class\n * @param updateMode Mode of automatic update. It can be a combination of multiple UpdateMode values\n * @param onUpdate A callback to be invoked when update happens\n */\nexport default function createUpdateContentPlugin(\n    updateMode: UpdateMode,\n    onUpdate: (html: string, mode: UpdateMode) => void\n): UpdateContentPlugin {\n    return new UpdateContentPluginImpl(updateMode, onUpdate);\n}\n","export { default as RibbonPlugin } from './type/RibbonPlugin';\nexport { default as RibbonButton } from './type/RibbonButton';\nexport { default as RibbonButtonDropDown } from './type/RibbonButtonDropDown';\nexport { default as RibbonProps } from './type/RibbonProps';\nexport { KnownRibbonButtonKey } from './type/KnownRibbonButton';\nexport {\n    BoldButtonStringKey,\n    ItalicButtonStringKey,\n    UnderlineButtonStringKey,\n    FontButtonStringKey,\n    FontSizeButtonStringKey,\n    IncreaseFontSizeButtonStringKey,\n    DecreaseFontSizeButtonStringKey,\n    TextColorButtonStringKey,\n    BackgroundColorButtonStringKey,\n    BulletedListButtonStringKey,\n    NumberedListButtonStringKey,\n    MoreCommandsButtonStringKey,\n    DecreaseIndentButtonStringKey,\n    IncreaseIndentButtonStringKey,\n    QuoteButtonStringKey,\n    AlignLeftButtonStringKey,\n    AlignCenterButtonStringKey,\n    AlignRightButtonStringKey,\n    InsertLinkButtonStringKey,\n    RemoveLinkButtonStringKey,\n    InsertTableButtonStringKey,\n    InsertImageButtonStringKey,\n    SuperscriptButtonStringKey,\n    SubscriptButtonStringKey,\n    StrikethroughButtonStringKey,\n    HeaderButtonStringKey,\n    CodeButtonStringKey,\n    LtrButtonStringKey,\n    RtlButtonStringKey,\n    UndoButtonStringKey,\n    RedoButtonStringKey,\n    ClearFormatButtonStringKey,\n    TextColorKeys,\n    BackgroundColorKeys,\n    AllButtonStringKeys,\n    CellShadeButtonStringKey,\n} from './type/RibbonButtonStringKeys';\n\nexport { default as Ribbon } from './component/Ribbon';\nexport { default as getButtons, AllButtonKeys } from './component/getButtons';\n\nexport { default as createRibbonPlugin } from './plugin/createRibbonPlugin';\n","import * as React from 'react';\nimport getLocalizedString from '../../common/utils/getLocalizedString';\nimport RibbonButton from '../type/RibbonButton';\nimport RibbonProps from '../type/RibbonProps';\nimport { CommandBar, ICommandBarItemProps } from '@fluentui/react/lib/CommandBar';\nimport { FocusZoneDirection } from '@fluentui/react/lib/FocusZone';\nimport { FormatState } from 'roosterjs-editor-types';\nimport { IContextualMenuItem, IContextualMenuItemProps } from '@fluentui/react/lib/ContextualMenu';\nimport { mergeStyles } from '@fluentui/react/lib/Styling';\nimport { moreCommands } from './buttons/moreCommands';\n\nconst ribbonClassName = mergeStyles({\n    '& .ms-CommandBar': {\n        padding: '0px',\n    },\n});\n\nconst rtlIcon = mergeStyles({\n    transform: 'scaleX(-1)',\n});\n\n/**\n * The format ribbon component of roosterjs-react\n * @param props Properties of format ribbon component\n * @returns The format ribbon component\n */\nexport default function Ribbon<T extends string>(props: RibbonProps<T>) {\n    const { plugin, buttons, strings, dir } = props;\n    const [formatState, setFormatState] = React.useState<FormatState>(null);\n    const isRtl = dir == 'rtl';\n\n    const onClick = React.useCallback(\n        (_, item: IContextualMenuItem) => {\n            plugin?.onButtonClick(item.data as RibbonButton<T>, item.key, strings);\n        },\n        [plugin, strings]\n    );\n\n    const onHover = React.useCallback(\n        (button: RibbonButton<T>, key: string) => {\n            plugin.startLivePreview(button, key, strings);\n        },\n        [plugin, strings]\n    );\n\n    const onDismiss = React.useCallback(() => {\n        plugin.stopLivePreview();\n    }, [plugin]);\n\n    const flipIcon = React.useCallback(\n        (\n            props?: IContextualMenuItemProps,\n            defaultRender?: (props?: IContextualMenuItemProps) => JSX.Element | null\n        ): JSX.Element | null => {\n            return <span className={rtlIcon}>{defaultRender(props)}</span>;\n        },\n        []\n    );\n\n    const commandBarItems = React.useMemo((): ICommandBarItemProps[] => {\n        return buttons.map(\n            (button): ICommandBarItemProps => {\n                const selectedItem =\n                    formatState && button.dropDownMenu?.getSelectedItemKey?.(formatState);\n                const dropDownMenu = button.dropDownMenu;\n\n                const result: ICommandBarItemProps = {\n                    key: button.key,\n                    data: button,\n                    iconProps: {\n                        iconName: button.iconName,\n                    },\n                    onRenderIcon: isRtl && button.flipWhenRtl ? flipIcon : undefined,\n                    iconOnly: true,\n                    text: getLocalizedString(strings, button.key, button.unlocalizedText),\n                    ariaLabel: getLocalizedString(strings, button.key, button.unlocalizedText),\n                    canCheck: true,\n                    checked: (formatState && button.isChecked?.(formatState)) || false,\n                    disabled: (formatState && button.isDisabled?.(formatState)) || false,\n                    ...(button.commandBarProperties || {}),\n                };\n\n                if (dropDownMenu) {\n                    result.subMenuProps = {\n                        shouldFocusOnMount: true,\n                        focusZoneProps: { direction: FocusZoneDirection.bidirectional },\n                        onDismiss: onDismiss,\n                        onItemClick: onClick,\n                        onRenderContextualMenuItem: dropDownMenu.allowLivePreview\n                            ? (props, defaultRenderer) => (\n                                  <div onMouseOver={e => onHover(button, props.key)}>\n                                      {defaultRenderer(props)}\n                                  </div>\n                              )\n                            : undefined,\n                        items: Object.keys(dropDownMenu.items).map(key => ({\n                            key: key,\n                            text: getLocalizedString(strings, key, dropDownMenu.items[key]),\n                            data: button,\n                            canCheck: !!dropDownMenu.getSelectedItemKey,\n                            checked: selectedItem == key || false,\n                            className: dropDownMenu.itemClassName,\n                            onRender: dropDownMenu.itemRender\n                                ? item => dropDownMenu.itemRender(item, onClick)\n                                : undefined,\n                        })),\n                        ...(dropDownMenu.commandBarSubMenuProperties || {}),\n                    };\n                } else {\n                    result.onClick = onClick;\n                }\n\n                return result;\n            }\n        );\n    }, [buttons, formatState, isRtl, strings, onClick, onDismiss, onHover]);\n\n    React.useEffect(() => {\n        const disposer = plugin?.registerFormatChangedCallback(setFormatState);\n\n        return () => {\n            disposer?.();\n        };\n    }, [plugin]);\n\n    const moreCommandsBtn = moreCommands as RibbonButton<T>;\n\n    return (\n        <CommandBar\n            items={commandBarItems}\n            {...props}\n            className={ribbonClassName + ' ' + (props?.className || '')}\n            overflowButtonProps={{\n                ariaLabel: getLocalizedString(\n                    strings,\n                    moreCommandsBtn.key,\n                    moreCommandsBtn.unlocalizedText\n                ),\n            }}\n        />\n    );\n}\n","import RibbonButton from '../../type/RibbonButton';\nimport { MoreCommandsButtonStringKey } from '../../type/RibbonButtonStringKeys';\n\n/**\n * @internal\n * \"More commands\" (overflow) button on the format ribbon\n */\nexport const moreCommands: RibbonButton<MoreCommandsButtonStringKey> = {\n    key: 'buttonNameMoreCommands',\n    unlocalizedText: 'More commands',\n    iconName: 'MoreCommands',\n    onClick: editor => {\n        return true;\n    },\n};\n","import RibbonButton from '../type/RibbonButton';\nimport { alignCenter } from './buttons/alignCenter';\nimport { alignLeft } from './buttons/alignLeft';\nimport { alignRight } from './buttons/alignRight';\nimport { AllButtonStringKeys } from '../type/RibbonButtonStringKeys';\nimport { backgroundColor } from './buttons/backgroundColor';\nimport { bold } from './buttons/bold';\nimport { bulletedList } from './buttons/bulletedList';\nimport { clearFormat } from './buttons/clearFormat';\nimport { code } from './buttons/code';\nimport { decreaseFontSize } from './buttons/decreaseFontSize';\nimport { decreaseIndent } from './buttons/decreaseIndent';\nimport { font } from './buttons/font';\nimport { fontSize } from './buttons/fontSize';\nimport { header } from './buttons/header';\nimport { increaseFontSize } from './buttons/increaseFontSize';\nimport { increaseIndent } from './buttons/increaseIndent';\nimport { insertImage } from './buttons/insertImage';\nimport { insertLink } from './buttons/insertLink';\nimport { insertTable } from './buttons/insertTable';\nimport { italic } from './buttons/italic';\nimport { KnownRibbonButtonKey } from '../type/KnownRibbonButton';\nimport { ltr } from './buttons/ltr';\nimport { numberedList } from './buttons/numberedList';\nimport { quote } from './buttons/quote';\nimport { redo } from './buttons/redo';\nimport { removeLink } from './buttons/removeLink';\nimport { rtl } from './buttons/rtl';\nimport { strikethrough } from './buttons/strikethrough';\nimport { subscript } from './buttons/subscript';\nimport { superscript } from './buttons/superscript';\nimport { textColor } from './buttons/textColor';\nimport { underline } from './buttons/underline';\nimport { undo } from './buttons/undo';\n\nconst KnownRibbonButtons: { [key in KnownRibbonButtonKey]: RibbonButton<AllButtonStringKeys> } = {\n    [KnownRibbonButtonKey.Bold]: bold,\n    [KnownRibbonButtonKey.Italic]: italic,\n    [KnownRibbonButtonKey.Underline]: underline,\n    [KnownRibbonButtonKey.Font]: font,\n    [KnownRibbonButtonKey.FontSize]: fontSize,\n    [KnownRibbonButtonKey.IncreaseFontSize]: increaseFontSize,\n    [KnownRibbonButtonKey.DecreaseFontSize]: decreaseFontSize,\n    [KnownRibbonButtonKey.TextColor]: textColor,\n    [KnownRibbonButtonKey.BackgroundColor]: backgroundColor,\n    [KnownRibbonButtonKey.BulletedList]: bulletedList,\n    [KnownRibbonButtonKey.NumberedList]: numberedList,\n    [KnownRibbonButtonKey.DecreaseIndent]: decreaseIndent,\n    [KnownRibbonButtonKey.IncreaseIndent]: increaseIndent,\n    [KnownRibbonButtonKey.Quote]: quote,\n    [KnownRibbonButtonKey.AlignLeft]: alignLeft,\n    [KnownRibbonButtonKey.AlignCenter]: alignCenter,\n    [KnownRibbonButtonKey.AlignRight]: alignRight,\n    [KnownRibbonButtonKey.InsertLink]: insertLink,\n    [KnownRibbonButtonKey.RemoveLink]: removeLink,\n    [KnownRibbonButtonKey.InsertTable]: insertTable,\n    [KnownRibbonButtonKey.InsertImage]: insertImage,\n    [KnownRibbonButtonKey.Superscript]: superscript,\n    [KnownRibbonButtonKey.Subscript]: subscript,\n    [KnownRibbonButtonKey.Strikethrough]: strikethrough,\n    [KnownRibbonButtonKey.Header]: header,\n    [KnownRibbonButtonKey.Code]: code,\n    [KnownRibbonButtonKey.Ltr]: ltr,\n    [KnownRibbonButtonKey.Rtl]: rtl,\n    [KnownRibbonButtonKey.Undo]: undo,\n    [KnownRibbonButtonKey.Redo]: redo,\n    [KnownRibbonButtonKey.ClearFormat]: clearFormat,\n};\n\n/**\n * An array of keys of all known ribbon buttons\n */\nexport const AllButtonKeys = [\n    KnownRibbonButtonKey.Bold,\n    KnownRibbonButtonKey.Italic,\n    KnownRibbonButtonKey.Underline,\n    KnownRibbonButtonKey.Font,\n    KnownRibbonButtonKey.FontSize,\n    KnownRibbonButtonKey.IncreaseFontSize,\n    KnownRibbonButtonKey.DecreaseFontSize,\n    KnownRibbonButtonKey.TextColor,\n    KnownRibbonButtonKey.BackgroundColor,\n    KnownRibbonButtonKey.BulletedList,\n    KnownRibbonButtonKey.NumberedList,\n    KnownRibbonButtonKey.DecreaseIndent,\n    KnownRibbonButtonKey.IncreaseIndent,\n    KnownRibbonButtonKey.Quote,\n    KnownRibbonButtonKey.AlignLeft,\n    KnownRibbonButtonKey.AlignCenter,\n    KnownRibbonButtonKey.AlignRight,\n    KnownRibbonButtonKey.InsertLink,\n    KnownRibbonButtonKey.RemoveLink,\n    KnownRibbonButtonKey.InsertTable,\n    KnownRibbonButtonKey.InsertImage,\n    KnownRibbonButtonKey.Superscript,\n    KnownRibbonButtonKey.Subscript,\n    KnownRibbonButtonKey.Strikethrough,\n    KnownRibbonButtonKey.Header,\n    KnownRibbonButtonKey.Code,\n    KnownRibbonButtonKey.Ltr,\n    KnownRibbonButtonKey.Rtl,\n    KnownRibbonButtonKey.Undo,\n    KnownRibbonButtonKey.Redo,\n    KnownRibbonButtonKey.ClearFormat,\n];\n\n/**\n * A shortcut to get all format buttons provided by roosterjs-react\n * @param keyOrButtons An array of buttons or known button key. Default value is all known buttons provided by roosterjs-react\n * @returns An array of all buttons\n */\nexport default function getButtons<StringKey extends string = null>(\n    keyOrButtons: (KnownRibbonButtonKey | RibbonButton<StringKey>)[] = AllButtonKeys\n): RibbonButton<AllButtonStringKeys | StringKey>[] {\n    return keyOrButtons.map(keyOrButton =>\n        typeof keyOrButton == 'number' ? KnownRibbonButtons[keyOrButton] : keyOrButton\n    );\n}\n","import RibbonButton from '../../type/RibbonButton';\nimport { AlignCenterButtonStringKey } from '../../type/RibbonButtonStringKeys';\nimport { Alignment } from 'roosterjs-editor-types';\nimport { setAlignment } from 'roosterjs-editor-api';\n\n/**\n * @internal\n * \"Align center\" button on the format ribbon\n */\nexport const alignCenter: RibbonButton<AlignCenterButtonStringKey> = {\n    key: 'buttonNameAlignCenter',\n    unlocalizedText: 'Align center',\n    iconName: 'AlignCenter',\n    onClick: editor => {\n        setAlignment(editor, Alignment.Center);\n    },\n};\n","import RibbonButton from '../../type/RibbonButton';\nimport { AlignLeftButtonStringKey } from '../../type/RibbonButtonStringKeys';\nimport { Alignment } from 'roosterjs-editor-types';\nimport { setAlignment } from 'roosterjs-editor-api';\n\n/**\n * @internal\n * \"Align left\" button on the format ribbon\n */\nexport const alignLeft: RibbonButton<AlignLeftButtonStringKey> = {\n    key: 'buttonNameAlignLeft',\n    unlocalizedText: 'Align left',\n    iconName: 'AlignLeft',\n    onClick: editor => {\n        setAlignment(editor, Alignment.Left);\n    },\n};\n","import RibbonButton from '../../type/RibbonButton';\nimport { Alignment } from 'roosterjs-editor-types';\nimport { AlignRightButtonStringKey } from '../../type/RibbonButtonStringKeys';\nimport { setAlignment } from 'roosterjs-editor-api';\n\n/**\n * @internal\n * \"Align right\" button on the format ribbon\n */\nexport const alignRight: RibbonButton<AlignRightButtonStringKey> = {\n    key: 'buttonNameAlignRight',\n    unlocalizedText: 'Align right',\n    iconName: 'AlignRight',\n    onClick: editor => {\n        setAlignment(editor, Alignment.Right);\n    },\n};\n","import RibbonButton from '../../type/RibbonButton';\nimport { IEditor } from 'roosterjs-editor-types';\nimport { setBackgroundColor } from 'roosterjs-editor-api';\nimport {\n    BackgroundColors,\n    BackgroundColorDropDownItems,\n    getColorPickerDropDown,\n} from './colorPicker';\n\nimport {\n    BackgroundColorKeys,\n    BackgroundColorButtonStringKey,\n} from '../../type/RibbonButtonStringKeys';\n\n/**\n * @internal\n * \"Background color\" button on the format ribbon\n */\nexport const backgroundColor: RibbonButton<BackgroundColorButtonStringKey> = {\n    dropDownMenu: getColorPickerDropDown(BackgroundColorDropDownItems),\n    key: 'buttonNameBackgroundColor',\n    unlocalizedText: 'Background color',\n    iconName: 'FabricTextHighlight',\n    onClick: (editor: IEditor, key: BackgroundColorKeys) => {\n        setBackgroundColor(editor, BackgroundColors[key]);\n    },\n};\n","import RibbonButton from '../../type/RibbonButton';\nimport { BoldButtonStringKey } from '../../type/RibbonButtonStringKeys';\nimport { toggleBold } from 'roosterjs-editor-api';\n\n/**\n * @internal\n * \"Bold\" button on the format ribbon\n */\nexport const bold: RibbonButton<BoldButtonStringKey> = {\n    key: 'buttonNameBold',\n    unlocalizedText: 'Bold',\n    iconName: 'Bold',\n    isChecked: formatState => formatState.isBold,\n    onClick: editor => {\n        toggleBold(editor);\n        return true;\n    },\n};\n","import RibbonButton from '../../type/RibbonButton';\nimport { BulletedListButtonStringKey } from '../../type/RibbonButtonStringKeys';\nimport { toggleBullet } from 'roosterjs-editor-api';\n\n/**\n * @internal\n * \"Bulleted list\" button on the format ribbon\n */\nexport const bulletedList: RibbonButton<BulletedListButtonStringKey> = {\n    key: 'buttonNameBulletedList',\n    unlocalizedText: 'Bulleted list',\n    iconName: 'BulletedList',\n    isChecked: formatState => formatState.isBullet,\n    onClick: editor => {\n        toggleBullet(editor);\n        return true;\n    },\n};\n","import RibbonButton from '../../type/RibbonButton';\nimport { clearFormat as clearFormatApi } from 'roosterjs-editor-api';\nimport { ClearFormatButtonStringKey } from '../../type/RibbonButtonStringKeys';\n\n/**\n * @internal\n * \"Clear format\" button on the format ribbon\n */\nexport const clearFormat: RibbonButton<ClearFormatButtonStringKey> = {\n    key: 'buttonNameClearFormat',\n    unlocalizedText: 'Clear format',\n    iconName: 'ClearFormatting',\n    onClick: editor => {\n        clearFormatApi(editor);\n    },\n};\n","import RibbonButton from '../../type/RibbonButton';\nimport { CodeButtonStringKey } from '../../type/RibbonButtonStringKeys';\nimport { toggleCodeBlock } from 'roosterjs-editor-api';\n\n/**\n * @internal\n * \"Code\" button on the format ribbon\n */\nexport const code: RibbonButton<CodeButtonStringKey> = {\n    key: 'buttonNameCode',\n    unlocalizedText: 'Code',\n    iconName: 'Code',\n    onClick: editor => {\n        toggleCodeBlock(editor);\n    },\n};\n","import RibbonButton from '../../type/RibbonButton';\nimport { changeFontSize } from 'roosterjs-editor-api';\nimport { DecreaseFontSizeButtonStringKey } from '../../type/RibbonButtonStringKeys';\nimport { FontSizeChange } from 'roosterjs-editor-types';\n\n/**\n * @internal\n * \"Decrease font size\" button on the format ribbon\n */\nexport const decreaseFontSize: RibbonButton<DecreaseFontSizeButtonStringKey> = {\n    key: 'buttonNameDecreaseFontSize',\n    unlocalizedText: 'Decrease font size',\n    iconName: 'FontDecrease',\n    onClick: editor => {\n        changeFontSize(editor, FontSizeChange.Decrease);\n    },\n};\n","import RibbonButton from '../../type/RibbonButton';\nimport { DecreaseIndentButtonStringKey } from '../../type/RibbonButtonStringKeys';\nimport { Indentation } from 'roosterjs-editor-types';\nimport { setIndentation } from 'roosterjs-editor-api';\n\n/**\n * @internal\n * \"Decrease indent\" button on the format ribbon\n */\nexport const decreaseIndent: RibbonButton<DecreaseIndentButtonStringKey> = {\n    key: 'buttonNameDecreaseIndent',\n    unlocalizedText: 'Decrease indent',\n    iconName: 'DecreaseIndentLegacy',\n    flipWhenRtl: true,\n    onClick: editor => {\n        setIndentation(editor, Indentation.Decrease);\n    },\n};\n","import RibbonButton from '../../type/RibbonButton';\nimport { FontButtonStringKey } from '../../type/RibbonButtonStringKeys';\nimport { setFontName } from 'roosterjs-editor-api';\n\ninterface FontName {\n    name: string;\n    family: string;\n    localizedName?: string;\n}\nconst FontNames: FontName[] = [\n    { name: 'Arial', family: 'Arial,Helvetica,sans-serif' },\n    { name: 'Arial Black', family: \"'Arial Black',Arial,sans-serif\" },\n    { name: 'Calibri', family: 'Calibri,Helvetica,sans-serif' },\n    { name: 'Calibri Light', family: \"'Calibri Light','Helvetica Light',sans-serif\" },\n    { name: 'Cambria', family: 'Cambria,Georgia,serif' },\n    { name: 'Candara', family: 'Candara,Optima,sans-serif' },\n    { name: 'Century Gothic', family: \"'Century Gothic',sans-serif\" },\n    { name: 'Comic Sans MS', family: \"'Comic Sans MS',Chalkboard,cursive\" },\n    { name: 'Consolas', family: 'Consolas,Courier,monospace' },\n    { name: 'Constantia', family: \"Constantia,'Hoefler Text',serif\" },\n    { name: 'Corbel', family: 'Corbel,Skia,sans-serif' },\n    { name: 'Courier New', family: \"'Courier New',monospace\" },\n    {\n        name: 'Franklin Gothic Book',\n        family: \"'Franklin Gothic Book','Avenir Next Condensed',sans-serif\",\n    },\n    {\n        name: 'Franklin Gothic Demi',\n        family: \"'Franklin Gothic Demi','Avenir Next Condensed Demi Bold',sans-serif\",\n    },\n    {\n        name: 'Franklin Gothic Medium',\n        family: \"'Franklin Gothic Medium','Avenir Next Condensed Medium',sans-serif\",\n    },\n    { name: 'Garamond', family: 'Garamond,Georgia,serif' },\n    { name: 'Georgia', family: 'Georgia,serif' },\n    { name: 'Impact', family: 'Impact,Charcoal,sans-serif' },\n    { name: 'Lucida Console', family: \"'Lucida Console',Monaco,monospace\" },\n    { name: 'Lucida Handwriting', family: \"'Lucida Handwriting','Apple Chancery',cursive\" },\n    { name: 'Lucida Sans Unicode', family: \"'Lucida Sans Unicode','Lucida Grande',sans-serif\" },\n    { name: 'Palatino Linotype', family: \"'Palatino Linotype','Book Antiqua',Palatino,serif\" },\n    {\n        name: 'Segoe UI',\n        family: \"'Segoe UI', 'Segoe UI Web (West European)', 'Helvetica Neue', sans-serif\",\n    },\n    { name: 'Sitka Heading', family: \"'Sitka Heading',Cochin,serif\" },\n    { name: 'Sitka Text', family: \"'Sitka Text',Cochin,serif\" },\n    { name: 'Tahoma', family: 'Tahoma,Geneva,sans-serif' },\n    { name: 'Times', family: \"Times,'Times New Roman',serif\" },\n    { name: 'Times New Roman', family: \"'Times New Roman',Times,serif\" },\n    { name: 'Trebuchet MS', family: \"'Trebuchet MS',Trebuchet,sans-serif\" },\n    { name: 'TW Cen MT', family: \"'TW Cen MT','Century Gothic',sans-serif\" },\n    { name: 'Verdana', family: 'Verdana,Geneva,sans-serif' },\n    { name: '-', family: 'FontDivider0' }, //divider between fonts for different scripts (order is by style)\n    {\n        name: 'Microsoft YaHei',\n        family: \"'Microsoft YaHei','微软雅黑',STHeiti,sans-serif\",\n        localizedName: '微软雅黑',\n    }, //chineseS Microsoft recommended font\n    { name: 'SimHei', family: \"SimHei,'黑体',STHeiti,sans-serif\", localizedName: '黑体' }, //chineseS\n    {\n        name: 'NSimSun',\n        family: \"NSimSun,'新宋体',SimSun,'宋体',SimSun-ExtB,'宋体-ExtB',STSong,serif\",\n        localizedName: '新宋体',\n    }, //chineseS\n    { name: 'FangSong', family: \"FangSong,'仿宋',STFangsong,serif\", localizedName: '仿宋' }, //chineseS\n    { name: 'SimLi', family: \"SimLi,'隶书','Baoli SC',serif\", localizedName: '隶书' }, //chineseS\n    { name: 'KaiTi', family: \"KaiTi,'楷体',STKaiti,serif\", localizedName: '楷体' }, //chineseS\n    { name: '-', family: 'FontDivider1' }, //divider between fonts for different scripts (order is by style)\n    {\n        name: 'Microsoft JhengHei',\n        family: \"'Microsoft JhengHei','微軟正黑體','Apple LiGothic',sans-serif\",\n        localizedName: '微軟正黑體',\n    }, //chineseT Microsoft recommended font\n    {\n        name: 'PMingLiU',\n        family: \"PMingLiU,'新細明體',PMingLiU-ExtB,'新細明體-ExtB','Apple LiSung',serif\",\n        localizedName: '新細明體',\n    }, //chineseT\n    { name: 'DFKai-SB', family: \"DFKai-SB,'標楷體','BiauKai',serif\", localizedName: '標楷體' }, //chineseT\n    { name: '-', family: 'FontDivider2' }, //divider between fonts for different scripts (order is alphabetical by foundry)\n    {\n        name: 'Meiryo',\n        family: \"Meiryo,'メイリオ','Hiragino Sans',sans-serif\",\n        localizedName: 'メイリオ',\n    }, //japanese\n    {\n        name: 'MS PGothic',\n        family:\n            \"'MS PGothic','ＭＳ Ｐゴシック','MS Gothic','ＭＳ ゴシック','Hiragino Kaku Gothic ProN',sans-serif\",\n        localizedName: 'ＭＳ Ｐゴシック',\n    }, //japanese\n    {\n        name: 'MS PMincho',\n        family: \"'MS PMincho','ＭＳ Ｐ明朝','MS Mincho','ＭＳ 明朝','Hiragino Mincho ProN',serif\",\n        localizedName: 'ＭＳ Ｐ明朝',\n    }, //japanese\n    {\n        name: 'Yu Gothic',\n        family: \"'Yu Gothic','游ゴシック','YuGothic',sans-serif\",\n        localizedName: '游ゴシック',\n    }, //japanese\n    { name: 'Yu Mincho', family: \"'Yu Mincho','游明朝','YuMincho',serif\", localizedName: '游明朝' }, //japanese\n    { name: '-', family: 'FontDivider3' }, //divider between fonts for different scripts (order is for legacy reasons)\n    {\n        name: 'Malgun Gothic',\n        family: \"'Malgun Gothic','맑은 고딕',AppleGothic,sans-serif\",\n        localizedName: '맑은 고딕',\n    }, //korean Microsoft recommended font\n    { name: 'Gulim', family: \"Gulim,'굴림','Nanum Gothic',sans-serif\", localizedName: '굴림' }, //korean\n    { name: 'Dotum', family: \"Dotum,'돋움',AppleGothic,sans-serif\", localizedName: '돋움' }, //korean\n    { name: 'Batang', family: \"Batang,'바탕',AppleMyungjo,serif\", localizedName: '바탕' }, //korean\n    { name: 'BatangChe', family: \"BatangChe,'바탕체',AppleMyungjo,serif\", localizedName: '바탕체' }, //korean\n    { name: 'Gungsuh', family: \"Gungsuh,'궁서',GungSeo,serif\", localizedName: '궁서' }, //korean\n    { name: '-', family: 'FontDivider4' }, //divider between fonts for different scripts (order is alphabetical)\n    { name: 'Leelawadee UI', family: \"'Leelawadee UI',Thonburi,sans-serif\" }, //thai Microsoft recommended font\n    { name: 'Angsana New', family: \"'Angsana New','Leelawadee UI',Sathu,serif\" }, //thai\n    { name: 'Cordia New', family: \"'Cordia New','Leelawadee UI',Silom,sans-serif\" }, //thai\n    { name: 'DaunPenh', family: \"DaunPenh,'Leelawadee UI','Khmer MN',sans-serif\" }, //khmer\n    { name: '-', family: 'FontDivider5' }, //divider between fonts for different scripts (order is alphabetical)\n    { name: 'Nirmala UI', family: \"'Nirmala UI',sans-serif\" }, //indic Microsoft recommended font\n    { name: 'Gautami', family: \"Gautami,'Nirmala UI','Telugu MN',sans-serif\" }, //indic\n    { name: 'Iskoola Pota', family: \"'Iskoola Pota','Nirmala UI','Sinhala MN',sans-serif\" }, //indic\n    { name: 'Kalinga', family: \"Kalinga,'Nirmala UI','Oriya MN',sans-serif\" }, //indic\n    { name: 'Kartika', family: \"Kartika,'Nirmala UI','Malayalam MN',sans-serif\" }, //indic\n    { name: 'Latha', family: \"Latha,'Nirmala UI','Tamil MN',sans-serif\" }, //indic\n    { name: 'Mangal', family: \"Mangal,'Nirmala UI','Devanagari Sangam MN',sans-serif\" }, //indic\n    { name: 'Raavi', family: \"Raavi,'Nirmala UI','Gurmukhi MN',sans-serif\" }, //indic\n    { name: 'Shruti', family: \"Shruti,'Nirmala UI','Gujarati Sangam MN',sans-serif\" }, //indic\n    { name: 'Tunga', family: \"Tunga,'Nirmala UI','Kannada MN',sans-serif\" }, //indic\n    { name: 'Vrinda', family: \"Vrinda,'Nirmala UI','Bangla MN',sans-serif\" }, //indic\n    { name: '-', family: 'FontDivider6' }, //divider between fonts for different scripts\n    { name: 'Nyala', family: 'Nyala,Kefa,sans-serif' }, //other-ethiopic\n    { name: 'Sylfaen', family: 'Sylfaen,Mshtakan,Menlo,serif' }, //other-armenian-georgian\n];\n\nconst DropDownItems = FontNames.reduce((items, font) => {\n    items[font.family] = font.localizedName || font.name;\n    return items;\n}, <Record<string, string>>{});\n\nconst LowerCaseFontMap = FontNames.reduce((items, font) => {\n    items[font.name.toLowerCase()] = font.family;\n    return items;\n}, <Record<string, string>>{});\n\nconst FirstFontRegex = /^['\"]?([^'\",]+)/i;\n\n/**\n * @internal\n * \"Font\" button on the format ribbon\n */\nexport const font: RibbonButton<FontButtonStringKey> = {\n    key: 'buttonNameFont',\n    unlocalizedText: 'Font',\n    iconName: 'Font',\n    dropDownMenu: {\n        items: DropDownItems,\n        getSelectedItemKey: formatState => {\n            const matches = formatState.fontName?.match(FirstFontRegex);\n            const firstName = matches?.[1]?.toLowerCase();\n            const selectedKey = (firstName && LowerCaseFontMap[firstName]) || '';\n\n            return selectedKey;\n        },\n        allowLivePreview: true,\n    },\n    onClick: (editor, font) => {\n        setFontName(editor, font);\n    },\n};\n","import RibbonButton from '../../type/RibbonButton';\nimport { FONT_SIZES, setFontSize } from 'roosterjs-editor-api';\nimport { FontSizeButtonStringKey } from '../../type/RibbonButtonStringKeys';\n\n/**\n * @internal\n * \"Font Size\" button on the format ribbon\n */\nexport const fontSize: RibbonButton<FontSizeButtonStringKey> = {\n    key: 'buttonNameFontSize',\n    unlocalizedText: 'Font size',\n    iconName: 'FontSize',\n    dropDownMenu: {\n        items: FONT_SIZES.reduce((map, size) => {\n            map[size + 'pt'] = size.toString();\n            return map;\n        }, <Record<string, string>>{}),\n        getSelectedItemKey: formatState => formatState.fontSize,\n        allowLivePreview: true,\n    },\n    onClick: (editor, size) => {\n        setFontSize(editor, size);\n    },\n};\n","import RibbonButton from '../../type/RibbonButton';\nimport { HeaderButtonStringKey } from '../../type/RibbonButtonStringKeys';\nimport { toggleHeader } from 'roosterjs-editor-api';\n\nconst headers = {\n    header1: 'Header 1',\n    header2: 'Header 2',\n    header3: 'Header 3',\n    header4: 'Header 4',\n    header5: 'Header 5',\n    header6: 'Header 6',\n    headerDivider: '-',\n    noHeader: 'No header',\n};\n\n/**\n * @internal\n * \"Header\" button on the format ribbon\n */\nexport const header: RibbonButton<HeaderButtonStringKey> = {\n    key: 'buttonNameHeader',\n    unlocalizedText: 'Header',\n    iconName: 'Header1',\n    dropDownMenu: {\n        items: headers,\n        getSelectedItemKey: formatState => {\n            return formatState.headerLevel > 0 ? 'header' + formatState.headerLevel : 'noHeader';\n        },\n    },\n    onClick: (editor, key) => {\n        const index = Object.keys(headers).indexOf(key) + 1;\n\n        if (index > 6) {\n            toggleHeader(editor, 0);\n        } else if (index > 0) {\n            toggleHeader(editor, index);\n        }\n    },\n};\n","import RibbonButton from '../../type/RibbonButton';\nimport { changeFontSize } from 'roosterjs-editor-api';\nimport { FontSizeChange } from 'roosterjs-editor-types';\nimport { IncreaseFontSizeButtonStringKey } from '../../type/RibbonButtonStringKeys';\n\n/**\n * @internal\n * \"Increase font size\" button on the format ribbon\n */\nexport const increaseFontSize: RibbonButton<IncreaseFontSizeButtonStringKey> = {\n    key: 'buttonNameIncreaseFontSize',\n    unlocalizedText: 'Increase font size',\n    iconName: 'FontIncrease',\n    onClick: editor => {\n        changeFontSize(editor, FontSizeChange.Increase);\n    },\n};\n","import RibbonButton from '../../type/RibbonButton';\nimport { IncreaseIndentButtonStringKey } from '../../type/RibbonButtonStringKeys';\nimport { Indentation } from 'roosterjs-editor-types';\nimport { setIndentation } from 'roosterjs-editor-api';\n\n/**\n * @internal\n * \"Increase indent\" button on the format ribbon\n */\nexport const increaseIndent: RibbonButton<IncreaseIndentButtonStringKey> = {\n    key: 'buttonNameIncreaseIndent',\n    unlocalizedText: 'Increase indent',\n    iconName: 'IncreaseIndentLegacy',\n    flipWhenRtl: true,\n    onClick: editor => {\n        setIndentation(editor, Indentation.Increase);\n    },\n};\n","import RibbonButton from '../../type/RibbonButton';\nimport { createElement } from 'roosterjs-editor-dom';\nimport { CreateElementData } from 'roosterjs-editor-types';\nimport { insertImage as insertImageApi } from 'roosterjs-editor-api';\nimport { InsertImageButtonStringKey } from '../../type/RibbonButtonStringKeys';\n\nconst FileInput: CreateElementData = {\n    tag: 'input',\n    attributes: {\n        type: 'file',\n        accept: 'image/*',\n        display: 'none',\n    },\n};\n\n/**\n * @internal\n * \"Insert image\" button on the format ribbon\n */\nexport const insertImage: RibbonButton<InsertImageButtonStringKey> = {\n    key: 'buttonNameInsertImage',\n    unlocalizedText: 'Insert image',\n    iconName: 'Photo2',\n    onClick: editor => {\n        const document = editor.getDocument();\n        const fileInput = createElement(FileInput, document) as HTMLInputElement;\n        document.body.appendChild(fileInput);\n\n        fileInput.addEventListener('change', () => {\n            for (let i = 0; i < fileInput.files.length; i++) {\n                insertImageApi(editor, fileInput.files[i]);\n            }\n        });\n\n        try {\n            fileInput.click();\n        } finally {\n            document.body.removeChild(fileInput);\n        }\n    },\n};\n","import * as React from 'react';\nimport getLocalizedString from '../../../common/utils/getLocalizedString';\nimport RibbonButton from '../../type/RibbonButton';\nimport { createLink } from 'roosterjs-editor-api';\nimport { DefaultButton, PrimaryButton } from '@fluentui/react/lib/Button';\nimport { Dialog, DialogFooter, DialogType } from '@fluentui/react/lib/Dialog';\nimport { IEditor, Keys, QueryScope } from 'roosterjs-editor-types';\nimport { InsertLinkButtonStringKey } from '../../type/RibbonButtonStringKeys';\nimport { LocalizedStrings } from '../../../common/type/LocalizedStrings';\nimport { mergeStyleSets } from '@fluentui/react/lib/Styling';\n\n/**\n * @internal\n * \"Insert link\" button on the format ribbon\n */\nexport const insertLink: RibbonButton<InsertLinkButtonStringKey> = {\n    key: 'buttonNameInsertLink',\n    unlocalizedText: 'Insert link',\n    iconName: 'Link',\n    onClick: (editor, _, strings, uiUtilities) => {\n        let disposer: null | (() => void) = null;\n        const onDismiss = () => {\n            disposer?.();\n        };\n        const existingLink = editor.queryElements<HTMLAnchorElement>(\n            'a[href]',\n            QueryScope.OnSelection\n        )[0];\n        const url = existingLink?.href || '';\n        const displayText =\n            existingLink?.textContent || editor.getSelectionRange()?.toString() || '';\n\n        disposer = uiUtilities.renderComponent(\n            <InsertLinkDialog\n                editor={editor}\n                onDismiss={onDismiss}\n                initUrl={url}\n                initDisplayText={displayText}\n                strings={strings}\n            />\n        );\n    },\n};\n\nconst classNames = mergeStyleSets({\n    linkInput: {\n        width: '100%',\n        minWidth: '250px',\n        height: '32px',\n        margin: '5px 0',\n        border: '1px solid black',\n        borderRadius: '2px',\n        padding: '0 0 0 5px',\n    },\n});\n\nfunction InsertLinkDialog(props: {\n    editor: IEditor;\n    initDisplayText: string;\n    initUrl: string;\n    onDismiss: (url?: string, displayText?: string) => void;\n    strings: LocalizedStrings<InsertLinkButtonStringKey>;\n}) {\n    const { editor, onDismiss, initUrl, initDisplayText, strings } = props;\n    const [url, setUrl] = React.useState(initUrl);\n    const [displayText, setDisplayText] = React.useState(initDisplayText);\n    const [isChanged, setIsChanged] = React.useState(false);\n    const urlInput = React.useRef<HTMLInputElement>();\n    const displayTextInput = React.useRef<HTMLInputElement>();\n    const dialogContentProps = {\n        type: DialogType.normal,\n        title: getLocalizedString(strings, 'insertLinkTitle', 'Insert link'),\n    };\n\n    const onOk = React.useCallback(() => {\n        onDismiss();\n        editor.focus();\n\n        if (isChanged && url && displayText) {\n            createLink(editor, url, url, displayText);\n        }\n    }, [onDismiss, url, displayText, isChanged]);\n\n    const onCancel = React.useCallback(() => {\n        onDismiss();\n    }, [onDismiss]);\n\n    const onDisplayTextChanged = React.useCallback(() => {\n        setDisplayText(displayTextInput.current.value);\n        setIsChanged(true);\n    }, [displayTextInput, setIsChanged]);\n\n    const onUrlChanged = React.useCallback(() => {\n        if (url == displayText) {\n            setDisplayText(urlInput.current.value);\n        }\n        setUrl(urlInput.current.value);\n        setIsChanged(true);\n    }, [setUrl, url, displayText, setDisplayText, setIsChanged]);\n\n    const onKeyPress = React.useCallback(\n        (e: React.KeyboardEvent<HTMLInputElement>) => {\n            if (e.which == Keys.ENTER) {\n                onOk();\n            }\n        },\n        [onOk]\n    );\n\n    return (\n        <Dialog dialogContentProps={dialogContentProps} hidden={false} onDismiss={onCancel}>\n            <div>\n                <div>\n                    <label htmlFor=\"linkInput\">Web address (URL)</label>\n                    <input\n                        id=\"linkInput\"\n                        ref={urlInput}\n                        role=\"textbox\"\n                        type=\"text\"\n                        className={classNames.linkInput}\n                        value={url}\n                        onChange={onUrlChanged}\n                        onKeyPress={onKeyPress}\n                        autoFocus={true}\n                    />\n                </div>\n                <div>\n                    <label htmlFor=\"displayTextInput\">Display as</label>\n                    <input\n                        id=\"displayTextInput\"\n                        ref={displayTextInput}\n                        role=\"textbox\"\n                        type=\"text\"\n                        className={classNames.linkInput}\n                        value={displayText}\n                        onChange={onDisplayTextChanged}\n                        onKeyPress={onKeyPress}\n                    />\n                </div>\n            </div>\n            <DialogFooter>\n                <PrimaryButton\n                    text={getLocalizedString(strings, 'buttonNameOK', 'OK')}\n                    onClick={onOk}\n                />\n                <DefaultButton\n                    text={getLocalizedString(strings, 'buttonNameCancel', 'Cancel')}\n                    onClick={onCancel}\n                />\n            </DialogFooter>\n        </Dialog>\n    );\n}\n","import * as React from 'react';\nimport RibbonButton from '../../type/RibbonButton';\nimport { FocusZone, FocusZoneDirection } from '@fluentui/react/lib/FocusZone';\nimport { IContextualMenuItem } from '@fluentui/react/lib/ContextualMenu';\nimport { insertTable as insertTableApi } from 'roosterjs-editor-api';\nimport { InsertTableButtonStringKey } from '../../type/RibbonButtonStringKeys';\nimport { mergeStyleSets } from '@fluentui/react/lib/Styling';\nimport { safeInstanceOf } from 'roosterjs-editor-dom';\n\nconst MaxRows = 10;\nconst MaxCols = 10;\nconst classNames = mergeStyleSets({\n    tableButton: {\n        width: '15px',\n        height: '15px',\n        margin: '1px 1px 0 0',\n        border: 'solid 1px #a19f9d',\n        display: 'inline-block',\n        cursor: 'pointer',\n        backgroundColor: 'transparent',\n    },\n    hovered: {\n        border: 'solid 1px #DB626C',\n    },\n    tablePane: {\n        width: '160px',\n        minWidth: 'auto',\n        padding: '4px',\n    },\n    tablePaneInner: {\n        lineHeight: '12px',\n    },\n    title: {\n        margin: '5px 0',\n    },\n});\n\n/**\n * @internal\n * \"Insert table\" button on the format ribbon\n */\nexport const insertTable: RibbonButton<InsertTableButtonStringKey> = {\n    key: 'buttonNameInsertTable',\n    unlocalizedText: 'Insert table',\n    iconName: 'Table',\n    onClick: (editor, key) => {\n        const { row, col } = parseKey(key);\n        insertTableApi(editor, col, row);\n    },\n    dropDownMenu: {\n        items: {\n            insertTablePane: '{0} x {1} table',\n        },\n        itemRender: (item, onClick) => {\n            return <InsertTablePane item={item} onClick={onClick} />;\n        },\n        commandBarSubMenuProperties: {\n            className: classNames.tablePane,\n        },\n    },\n};\n\nfunction InsertTablePane(props: {\n    item: IContextualMenuItem;\n    onClick: (\n        e: React.MouseEvent<Element> | React.KeyboardEvent<Element>,\n        item: IContextualMenuItem\n    ) => void;\n}) {\n    const { item, onClick } = props;\n    const [col, setCol] = React.useState(1);\n    const [row, setRow] = React.useState(1);\n\n    const updateSize = React.useCallback(\n        (t: EventTarget) => {\n            if (safeInstanceOf(t, 'HTMLElement')) {\n                const col = parseInt(t.dataset.col);\n                const row = parseInt(t.dataset.row);\n\n                if (col > 0 && col <= MaxCols && row > 0 && row <= MaxRows) {\n                    setCol(col);\n                    setRow(row);\n                }\n            }\n        },\n        [setCol, setRow]\n    );\n\n    const onMouseEnter = React.useCallback(\n        (e: React.MouseEvent<HTMLButtonElement>) => {\n            updateSize(e.target);\n        },\n        [updateSize]\n    );\n\n    const onClickButton = React.useCallback(\n        (e: React.MouseEvent<HTMLButtonElement>) => {\n            onClick(e, {\n                ...item,\n                key: createKey(row, col),\n            });\n        },\n        [row, col, onClick]\n    );\n\n    const ariaLabels = React.useMemo<string[][]>(() => {\n        const result: string[][] = [];\n        for (let i = 1; i <= MaxCols; i++) {\n            let col: string[] = [];\n            for (let j = 1; j <= MaxRows; j++) {\n                col[j] = formatText(item.text, i, j);\n            }\n            result[i] = col;\n        }\n        return result;\n    }, [item.text]);\n\n    const items = React.useMemo(() => {\n        const items: JSX.Element[] = [];\n\n        for (let i = 1; i <= MaxRows; i++) {\n            for (let j = 1; j <= MaxCols; j++) {\n                const key = `cell_${i}_${j}`;\n                const isSelected = j <= col && i <= row;\n                items.push(\n                    <button\n                        className={\n                            classNames.tableButton + ' ' + (isSelected ? classNames.hovered : '')\n                        }\n                        onClick={onClickButton}\n                        key={key}\n                        id={key}\n                        data-col={j}\n                        data-row={i}\n                        data-is-focusable={true}\n                        onMouseEnter={onMouseEnter}\n                        aria-label={ariaLabels[i][j]}\n                    />\n                );\n            }\n        }\n\n        return items;\n    }, [col, row]);\n\n    const text = formatText(item.text, row, col);\n\n    return (\n        <div className={classNames.tablePaneInner}>\n            <div className={classNames.title}>{text}</div>\n            <FocusZone\n                defaultActiveElement=\"cell_1_1\"\n                direction={FocusZoneDirection.bidirectional}\n                onActiveElementChanged={updateSize}>\n                {items}\n            </FocusZone>\n        </div>\n    );\n}\n\nfunction formatText(text: string, row: number, col: number) {\n    return text.replace('{0}', col.toString()).replace('{1}', row.toString());\n}\n\nfunction createKey(row: number, col: number) {\n    return `${row},${col}`;\n}\n\nfunction parseKey(key: string): { row: number; col: number } {\n    const [row, col] = key.split(',');\n    return {\n        row: parseInt(row),\n        col: parseInt(col),\n    };\n}\n","import RibbonButton from '../../type/RibbonButton';\nimport { ItalicButtonStringKey } from '../../type/RibbonButtonStringKeys';\nimport { toggleItalic } from 'roosterjs-editor-api';\n\n/**\n * @internal\n * \"Italic\" button on the format ribbon\n */\nexport const italic: RibbonButton<ItalicButtonStringKey> = {\n    key: 'buttonNameItalic',\n    unlocalizedText: 'Italic',\n    iconName: 'Italic',\n    isChecked: formatState => formatState.isItalic,\n    onClick: editor => {\n        toggleItalic(editor);\n        return true;\n    },\n};\n","import RibbonButton from '../../type/RibbonButton';\nimport { Direction } from 'roosterjs-editor-types';\nimport { LtrButtonStringKey } from '../../type/RibbonButtonStringKeys';\nimport { setDirection } from 'roosterjs-editor-api';\n\n/**\n * @internal\n * \"Left to right\" button on the format ribbon\n */\nexport const ltr: RibbonButton<LtrButtonStringKey> = {\n    key: 'buttonNameLtr',\n    unlocalizedText: 'Left to right',\n    iconName: 'BidiLtr',\n    onClick: editor => {\n        setDirection(editor, Direction.LeftToRight);\n    },\n};\n","import RibbonButton from '../../type/RibbonButton';\nimport { NumberedListButtonStringKey } from '../../type/RibbonButtonStringKeys';\nimport { toggleNumbering } from 'roosterjs-editor-api';\n\n/**\n * @internal\n * \"Numbered list\" button on the format ribbon\n */\nexport const numberedList: RibbonButton<NumberedListButtonStringKey> = {\n    key: 'buttonNameNumberedList',\n    unlocalizedText: 'Numbered list',\n    iconName: 'NumberedList',\n    isChecked: formatState => formatState.isNumbering,\n    onClick: editor => {\n        toggleNumbering(editor);\n        return true;\n    },\n};\n","import RibbonButton from '../../type/RibbonButton';\nimport { QuoteButtonStringKey } from '../../type/RibbonButtonStringKeys';\nimport { toggleBlockQuote } from 'roosterjs-editor-api';\n\n/**\n * @internal\n * \"Quote\" button on the format ribbon\n */\nexport const quote: RibbonButton<QuoteButtonStringKey> = {\n    key: 'buttonNameQuote',\n    unlocalizedText: 'Quote',\n    iconName: 'RightDoubleQuote',\n    isChecked: formatState => formatState.isBlockQuote,\n    onClick: editor => {\n        toggleBlockQuote(editor);\n        return true;\n    },\n};\n","import RibbonButton from '../../type/RibbonButton';\nimport { RedoButtonStringKey } from '../../type/RibbonButtonStringKeys';\n\n/**\n * @internal\n * \"Redo\" button on the format ribbon\n */\nexport const redo: RibbonButton<RedoButtonStringKey> = {\n    key: 'buttonNameRedo',\n    unlocalizedText: 'Redo',\n    iconName: 'Redo',\n    isDisabled: formatState => !formatState.canRedo,\n    onClick: editor => {\n        editor.redo();\n        return true;\n    },\n};\n","import RibbonButton from '../../type/RibbonButton';\nimport { removeLink as removeLinkApi } from 'roosterjs-editor-api';\nimport { RemoveLinkButtonStringKey } from '../../type/RibbonButtonStringKeys';\n\n/**\n * @internal\n * \"Remove link\" button on the format ribbon\n */\nexport const removeLink: RibbonButton<RemoveLinkButtonStringKey> = {\n    key: 'buttonNameRemoveLink',\n    unlocalizedText: 'Remove link',\n    iconName: 'RemoveLink',\n    isDisabled: formatState => !formatState.canUnlink,\n    onClick: editor => {\n        removeLinkApi(editor);\n    },\n};\n","import RibbonButton from '../../type/RibbonButton';\nimport { Direction } from 'roosterjs-editor-types';\nimport { RtlButtonStringKey } from '../../type/RibbonButtonStringKeys';\nimport { setDirection } from 'roosterjs-editor-api';\n\n/**\n * @internal\n * \"Right to left\" button on the format ribbon\n */\nexport const rtl: RibbonButton<RtlButtonStringKey> = {\n    key: 'buttonNameRtl',\n    unlocalizedText: 'Right to left',\n    iconName: 'BidiRtl',\n    onClick: editor => {\n        setDirection(editor, Direction.RightToLeft);\n    },\n};\n","import RibbonButton from '../../type/RibbonButton';\nimport { StrikethroughButtonStringKey } from '../../type/RibbonButtonStringKeys';\nimport { toggleStrikethrough } from 'roosterjs-editor-api';\n\n/**\n * @internal\n * \"Strikethrough\" button on the format ribbon\n */\nexport const strikethrough: RibbonButton<StrikethroughButtonStringKey> = {\n    key: 'buttonNameStrikethrough',\n    unlocalizedText: 'Strikethrough',\n    iconName: 'Strikethrough',\n    isChecked: formatState => formatState.isStrikeThrough,\n    onClick: editor => {\n        toggleStrikethrough(editor);\n        return true;\n    },\n};\n","import RibbonButton from '../../type/RibbonButton';\nimport { SubscriptButtonStringKey } from '../../type/RibbonButtonStringKeys';\nimport { toggleSubscript } from 'roosterjs-editor-api';\n\n/**\n * @internal\n * \"Subscript\" button on the format ribbon\n */\nexport const subscript: RibbonButton<SubscriptButtonStringKey> = {\n    key: 'buttonNameSubscript',\n    unlocalizedText: 'Subscript',\n    iconName: 'Subscript',\n    isChecked: formatState => formatState.isSubscript,\n    onClick: editor => {\n        toggleSubscript(editor);\n        return true;\n    },\n};\n","import RibbonButton from '../../type/RibbonButton';\nimport { SuperscriptButtonStringKey } from '../../type/RibbonButtonStringKeys';\nimport { toggleSuperscript } from 'roosterjs-editor-api';\n\n/**\n * @internal\n * \"Superscript\" button on the format ribbon\n */\nexport const superscript: RibbonButton<SuperscriptButtonStringKey> = {\n    key: 'buttonNameSuperscript',\n    unlocalizedText: 'Superscript',\n    iconName: 'Superscript',\n    isChecked: formatState => formatState.isSuperscript,\n    onClick: editor => {\n        toggleSuperscript(editor);\n        return true;\n    },\n};\n","import RibbonButton from '../../type/RibbonButton';\nimport { getColorPickerDropDown, TextColors } from './colorPicker';\nimport { setTextColor } from 'roosterjs-editor-api';\nimport { TextColorButtonStringKey, TextColorKeys } from '../../type/RibbonButtonStringKeys';\n\nconst TextColorDropDownItems: Record<TextColorKeys, string> = {\n    textColorLightBlue: 'Light blue',\n    textColorLightGreen: 'Light green',\n    textColorLightYellow: 'Light yellow',\n    textColorLightOrange: 'Light orange',\n    textColorLightRed: 'Light red',\n    textColorLightPurple: 'Light purple',\n    textColorBlue: 'Blue',\n    textColorGreen: 'Green',\n    textColorYellow: 'Yellow',\n    textColorOrange: 'Orange',\n    textColorRed: 'Red',\n    textColorPurple: 'Purple',\n    textColorDarkBlue: 'Dark blue',\n    textColorDarkGreen: 'Dark green',\n    textColorDarkYellow: 'Dark yellow',\n    textColorDarkOrange: 'Dark orange',\n    textColorDarkRed: 'Dark red',\n    textColorDarkPurple: 'Dark purple',\n    textColorDarkerBlue: 'Darker blue',\n    textColorDarkerGreen: 'Darker green',\n    textColorDarkerYellow: 'Darker yellow',\n    textColorDarkerOrange: 'Darker orange',\n    textColorDarkerRed: 'Darker red',\n    textColorDarkerPurple: 'Darker purple',\n    textColorWhite: 'White',\n    textColorLightGray: 'Light gray',\n    textColorGray: 'Gray',\n    textColorDarkGray: 'Dark gray',\n    textColorDarkerGray: 'Darker gray',\n    textColorBlack: 'Black',\n};\n\n/**\n * @internal\n * \"Text color\" button on the format ribbon\n */\nexport const textColor: RibbonButton<TextColorButtonStringKey> = {\n    dropDownMenu: getColorPickerDropDown(TextColorDropDownItems),\n    key: 'buttonNameTextColor',\n    unlocalizedText: 'Text color',\n    iconName: 'FontColor',\n    onClick: (editor, key: TextColorKeys) => {\n        setTextColor(editor, TextColors[key]);\n    },\n};\n","import RibbonButton from '../../type/RibbonButton';\nimport { toggleUnderline } from 'roosterjs-editor-api';\nimport { UnderlineButtonStringKey } from '../../type/RibbonButtonStringKeys';\n\n/**\n * @internal\n * \"Underline\" button on the format ribbon\n */\nexport const underline: RibbonButton<UnderlineButtonStringKey> = {\n    key: 'buttonNameUnderline',\n    unlocalizedText: 'Underline',\n    iconName: 'Underline',\n    isChecked: formatState => formatState.isUnderline,\n    onClick: editor => {\n        toggleUnderline(editor);\n        return true;\n    },\n};\n","import RibbonButton from '../../type/RibbonButton';\nimport { UndoButtonStringKey } from '../../type/RibbonButtonStringKeys';\n\n/**\n * @internal\n * \"Undo\" button on the format ribbon\n */\nexport const undo: RibbonButton<UndoButtonStringKey> = {\n    key: 'buttonNameUndo',\n    unlocalizedText: 'Undo',\n    iconName: 'undo',\n    isDisabled: formatState => !formatState.canUndo,\n    onClick: editor => {\n        editor.undo();\n        return true;\n    },\n};\n","import RibbonButton from '../type/RibbonButton';\nimport RibbonPlugin from '../type/RibbonPlugin';\nimport { FormatState, IEditor, PluginEvent, PluginEventType } from 'roosterjs-editor-types';\nimport { getFormatState } from 'roosterjs-editor-api';\nimport { LocalizedStrings, UIUtilities } from '../../common/index';\n\n/**\n * A plugin to connect format ribbon component and the editor\n */\nclass RibbonPluginImpl implements RibbonPlugin {\n    private editor: IEditor;\n    private onFormatChanged: (formatState: FormatState) => void;\n    private timer = 0;\n    private formatState: FormatState;\n    private uiUtilities: UIUtilities;\n\n    /**\n     * Construct a new instance of RibbonPlugin object\n     * @param delayUpdateTime The time to wait before refresh the button when user do some editing operation in editor\n     */\n    constructor(private delayUpdateTime: number = 200) {}\n\n    /**\n     * Get a friendly name of this plugin\n     */\n    getName() {\n        return 'Ribbon';\n    }\n\n    /**\n     * Initialize this plugin\n     * @param editor The editor instance\n     */\n    initialize(editor: IEditor) {\n        this.editor = editor;\n    }\n\n    /**\n     * Dispose this plugin\n     */\n    dispose() {\n        this.editor = null;\n    }\n\n    /**\n     * Handle events triggered from editor\n     * @param event PluginEvent object\n     */\n    onPluginEvent(event: PluginEvent) {\n        switch (event.eventType) {\n            case PluginEventType.EditorReady:\n            case PluginEventType.ContentChanged:\n            case PluginEventType.ZoomChanged:\n                this.updateFormat();\n                break;\n\n            case PluginEventType.KeyDown:\n            case PluginEventType.MouseDown:\n                this.delayUpdate();\n                break;\n        }\n    }\n\n    /**\n     * Set the UI utilities objects to this plugin to help render additional UI elements\n     * @param uiUtilities The UI utilities object to set\n     */\n    setUIUtilities(uiUtilities: UIUtilities) {\n        this.uiUtilities = uiUtilities;\n    }\n\n    /**\n     * Register a callback to be invoked when format state of editor is changed, returns a disposer function.\n     */\n    registerFormatChangedCallback(callback: (formatState: FormatState) => void) {\n        this.onFormatChanged = callback;\n\n        return () => {\n            this.onFormatChanged = null;\n        };\n    }\n\n    /**\n     * When user clicks on a button, call this method to let the plugin to handle this click event\n     * @param button The button that is clicked\n     * @param key Key of child menu item that is clicked if any\n     * @param strings The localized string map for this button\n     */\n    onButtonClick<T extends string>(button: RibbonButton<T>, key: T, strings: LocalizedStrings<T>) {\n        if (this.editor) {\n            this.editor.stopShadowEdit();\n\n            button.onClick(this.editor, key, strings, this.uiUtilities);\n\n            if (button.isChecked || button.isDisabled || button.dropDownMenu?.getSelectedItemKey) {\n                this.updateFormat();\n            }\n        }\n    }\n\n    /**\n     * Enter live preview state (shadow edit) of editor if there is a non-collapsed selection\n     * @param button The button that triggered this action\n     * @param key Key of the hovered button sub item\n     * @param strings The localized string map for this button\n     */\n    startLivePreview<T extends string>(\n        button: RibbonButton<T>,\n        key: string,\n        strings: LocalizedStrings<T>\n    ) {\n        if (this.editor) {\n            const isInShadowEdit = this.editor.isInShadowEdit();\n\n            // If editor is already in shadow edit, no need to check again.\n            // And the check result may be incorrect because the content is changed from last shadow edit and the cached selection path won't apply\n            const range = !isInShadowEdit && this.editor.getSelectionRangeEx();\n\n            if (isInShadowEdit || (range && !range.areAllCollapsed)) {\n                this.editor.startShadowEdit();\n                button.onClick(this.editor, key, strings, this.uiUtilities);\n            }\n        }\n    }\n\n    /**\n     * Leave live preview state (shadow edit) of editor\n     */\n    stopLivePreview() {\n        this.editor?.stopShadowEdit();\n    }\n\n    private delayUpdate() {\n        const window = this.editor.getDocument().defaultView;\n\n        if (this.timer) {\n            window.clearTimeout(this.timer);\n        }\n\n        this.timer = window.setTimeout(() => {\n            this.timer = 0;\n            this.updateFormat?.();\n        }, this.delayUpdateTime);\n    }\n\n    private updateFormat() {\n        if (this.editor && this.onFormatChanged) {\n            const newFormatState = getFormatState(this.editor);\n\n            if (\n                !this.formatState ||\n                Object.keys(newFormatState).some(\n                    (key: keyof FormatState) => newFormatState[key] != this.formatState[key]\n                )\n            ) {\n                this.formatState = newFormatState;\n                this.onFormatChanged(newFormatState);\n            }\n        }\n    }\n}\n\n/**\n * Create a new instance of RibbonPlugin object\n * @param delayUpdateTime The time to wait before refresh the button when user do some editing operation in editor\n */\nexport default function createRibbonPlugin(delayUpdateTime?: number): RibbonPlugin {\n    return new RibbonPluginImpl(delayUpdateTime);\n}\n"],"sourceRoot":""}