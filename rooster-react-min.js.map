{"version":3,"sources":["webpack://roosterjsReact/webpack/bootstrap","webpack://roosterjsReact/external \"roosterjs\"","webpack://roosterjsReact/external \"FluentUIReact\"","webpack://roosterjsReact/external \"React\"","webpack://roosterjsReact/./packages-ui/roosterjs-react/lib/utils/getLocalizedString.ts","webpack://roosterjsReact/./packages-ui/roosterjs-react/lib/components/Ribbon/buttons/alignCenter.ts","webpack://roosterjsReact/./packages-ui/roosterjs-react/lib/components/Ribbon/buttons/alignLeft.ts","webpack://roosterjsReact/./packages-ui/roosterjs-react/lib/components/Ribbon/buttons/alignRight.ts","webpack://roosterjsReact/./packages-ui/roosterjs-react/lib/components/Ribbon/buttons/bold.ts","webpack://roosterjsReact/./packages-ui/roosterjs-react/lib/components/Ribbon/buttons/bulletedList.ts","webpack://roosterjsReact/./packages-ui/roosterjs-react/lib/components/Ribbon/buttons/clearFormat.ts","webpack://roosterjsReact/./packages-ui/roosterjs-react/lib/components/Ribbon/buttons/code.ts","webpack://roosterjsReact/./packages-ui/roosterjs-react/lib/components/Ribbon/buttons/decreaseIndent.ts","webpack://roosterjsReact/./packages-ui/roosterjs-react/lib/components/Ribbon/buttons/font.ts","webpack://roosterjsReact/./packages-ui/roosterjs-react/lib/components/Ribbon/buttons/fontSize.ts","webpack://roosterjsReact/./packages-ui/roosterjs-react/lib/components/Ribbon/buttons/header.ts","webpack://roosterjsReact/./packages-ui/roosterjs-react/lib/components/Ribbon/buttons/increaseIndent.ts","webpack://roosterjsReact/./packages-ui/roosterjs-react/lib/components/Ribbon/buttons/italic.ts","webpack://roosterjsReact/./packages-ui/roosterjs-react/lib/components/Ribbon/buttons/ltr.ts","webpack://roosterjsReact/./packages-ui/roosterjs-react/lib/components/Ribbon/buttons/numberedList.ts","webpack://roosterjsReact/./packages-ui/roosterjs-react/lib/components/Ribbon/buttons/quote.ts","webpack://roosterjsReact/./packages-ui/roosterjs-react/lib/components/Ribbon/buttons/redo.ts","webpack://roosterjsReact/./packages-ui/roosterjs-react/lib/components/Ribbon/buttons/rtl.ts","webpack://roosterjsReact/./packages-ui/roosterjs-react/lib/components/Ribbon/buttons/strikethrough.ts","webpack://roosterjsReact/./packages-ui/roosterjs-react/lib/components/Ribbon/buttons/subscript.ts","webpack://roosterjsReact/./packages-ui/roosterjs-react/lib/components/Ribbon/buttons/superscript.ts","webpack://roosterjsReact/./packages-ui/roosterjs-react/lib/components/Ribbon/buttons/underline.ts","webpack://roosterjsReact/./packages-ui/roosterjs-react/lib/components/Ribbon/buttons/undo.ts","webpack://roosterjsReact/./packages-ui/roosterjs-react/lib/index.ts","webpack://roosterjsReact/./packages-ui/roosterjs-react/lib/components/Rooster/index.ts","webpack://roosterjsReact/./packages-ui/roosterjs-react/lib/components/Rooster/Rooster.tsx","webpack://roosterjsReact/./packages-ui/roosterjs-react/lib/components/Ribbon/index.ts","webpack://roosterjsReact/./packages-ui/roosterjs-react/lib/components/Ribbon/Ribbon.tsx","webpack://roosterjsReact/./packages-ui/roosterjs-react/lib/components/Ribbon/getAllButtons.ts","webpack://roosterjsReact/./packages-ui/roosterjs-react/lib/plugins/UpdateContentPlugin/index.ts","webpack://roosterjsReact/./packages-ui/roosterjs-react/lib/plugins/UpdateContentPlugin/UpdateContentPlugin.ts","webpack://roosterjsReact/./packages-ui/roosterjs-react/lib/plugins/RibbonPlugin/index.ts","webpack://roosterjsReact/./packages-ui/roosterjs-react/lib/plugins/RibbonPlugin/createRibbonPlugin.ts","webpack://roosterjsReact/./packages-ui/roosterjs-react/lib/utils/index.ts"],"names":["installedModules","__webpack_require__","moduleId","exports","module","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","roosterjs","FluentUIReact","React","strings","defaultString","str","alignCenter","unlocalizedText","iconName","onClick","editor","setAlignment","alignLeft","alignRight","bold","checked","formatState","isBold","toggleBold","bulletedList","isBullet","toggleBullet","clearFormat","code","toggleCodeBlock","decreaseIndent","setIndentation","FontNames","family","localizedName","DropDownItems","reduce","items","font","LowerCaseFontMap","toLowerCase","FirstFontRegex","dropDownItems","selectedItem","matches","fontName","match","firstName","setFontName","allowLivePreview","fontSize","FONT_SIZES","map","size","toString","setFontSize","headers","header1","header2","header3","header4","header5","header6","headerDivider","noHeader","header","index","keys","indexOf","toggleHeader","increaseIndent","italic","isItalic","toggleItalic","ltr","setDirection","numberedList","isNumbering","toggleNumbering","quote","isBlockQuote","toggleBlockQuote","redo","disabled","canRedo","rtl","strikethrough","isStrikeThrough","toggleStrikethrough","subscript","isSubscript","toggleSubscript","superscript","isSuperscript","toggleSuperscript","underline","isUnderline","toggleUnderline","undo","canUndo","default","defaultEditorCreator","div","options","Editor","props","editorDiv","useRef","domAttributes","editorOptions","focusOnInit","editorCreator","zoomScale","inDarkMode","useEffect","current","focus","dispose","setDarkModeState","setZoomScale","ref","tabIndex","ribbonClassName","mergeStyles","padding","plugin","buttons","dir","useState","setFormatState","isRtl","useCallback","_","item","onButtonClick","data","onHover","button","startLivePreview","onDismiss","stopLivePreview","commandBarItems","useMemo","result","iconProps","rtlIconName","iconOnly","text","canCheck","subMenuProps","className","dropDownClassName","shouldFocusOnMount","focusZoneProps","direction","FocusZoneDirection","bidirectional","onItemClick","onRenderContextualMenuItem","defaultRenderer","onMouseOver","e","undefined","itemClassName","onRender","dropDownItemRender","disposer","registerFormatChangedCallback","CommandBar","updateMode","onUpdate","onBlur","update","getName","initialize","this","addDomEventHandler","onPluginEvent","event","eventType","forceUpdate","content","getContent","delayUpdateTime","timer","updateFormat","delayUpdate","callback","onFormatChanged","stopShadowEdit","isInShadowEdit","range","getSelectionRangeEx","areAllCollapsed","startShadowEdit","window","getDocument","defaultView","clearTimeout","setTimeout","getFormatState","some","RibbonPlugin"],"mappings":"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","file":"rooster-react-min.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 27);\n","module.exports = roosterjs;","module.exports = FluentUIReact;","module.exports = React;","import { LocalizedStrings } from './LocalizedStrings';\n\n/**\n * Get a localized string\n * @param strings The LocalizedStrings map\n * @param key Key of the string\n * @param defaultString Default unlocalized string, will be used if strings is not specified or the give key doesn't exist in strings\n * @returns A localized string from the string map, or defaultString\n */\nexport default function getLocalizedString<T extends string>(\n    strings: Partial<LocalizedStrings<T>>,\n    key: T,\n    defaultString: string\n) {\n    const str = strings?.[key];\n\n    if (typeof str == 'function') {\n        return str();\n    } else if (typeof str == 'string') {\n        return str;\n    } else {\n        return defaultString;\n    }\n}\n","import RibbonButton from '../../../plugins/RibbonPlugin/RibbonButton';\nimport { Alignment } from 'roosterjs-editor-types';\nimport { setAlignment } from 'roosterjs-editor-api';\n\n/**\n * Key of localized strings of Align center button\n */\nexport type AlignCenterButtonStringKey = 'buttonNameAlignCenter';\n\n/**\n * \"Align center\" button on the format ribbon\n */\nexport const alignCenter: RibbonButton<AlignCenterButtonStringKey> = {\n    key: 'buttonNameAlignCenter',\n    unlocalizedText: 'Align center',\n    iconName: 'AlignCenter',\n    onClick: editor => {\n        setAlignment(editor, Alignment.Center);\n    },\n};\n","import RibbonButton from '../../../plugins/RibbonPlugin/RibbonButton';\nimport { Alignment } from 'roosterjs-editor-types';\nimport { setAlignment } from 'roosterjs-editor-api';\n\n/**\n * Key of localized strings of Align left button\n */\nexport type AlignLeftButtonStringKey = 'buttonNameAlignLeft';\n\n/**\n * \"Align left\" button on the format ribbon\n */\nexport const alignLeft: RibbonButton<AlignLeftButtonStringKey> = {\n    key: 'buttonNameAlignLeft',\n    unlocalizedText: 'Align left',\n    iconName: 'AlignLeft',\n    onClick: editor => {\n        setAlignment(editor, Alignment.Left);\n    },\n};\n","import RibbonButton from '../../../plugins/RibbonPlugin/RibbonButton';\nimport { Alignment } from 'roosterjs-editor-types';\nimport { setAlignment } from 'roosterjs-editor-api';\n\n/**\n * Key of localized strings of Align right button\n */\nexport type AlignRightButtonStringKey = 'buttonNameAlignRight';\n\n/**\n * \"Align right\" button on the format ribbon\n */\nexport const alignRight: RibbonButton<AlignRightButtonStringKey> = {\n    key: 'buttonNameAlignRight',\n    unlocalizedText: 'Align right',\n    iconName: 'AlignRight',\n    onClick: editor => {\n        setAlignment(editor, Alignment.Right);\n    },\n};\n","import RibbonButton from '../../../plugins/RibbonPlugin/RibbonButton';\nimport { toggleBold } from 'roosterjs-editor-api';\n\n/**\n * Key of localized strings of Bold button\n */\nexport type BoldButtonStringKey = 'buttonNameBold';\n\n/**\n * \"Bold\" button on the format ribbon\n */\nexport const bold: RibbonButton<BoldButtonStringKey> = {\n    key: 'buttonNameBold',\n    unlocalizedText: 'Bold',\n    iconName: 'Bold',\n    checked: formatState => formatState.isBold,\n    onClick: editor => {\n        toggleBold(editor);\n        return true;\n    },\n};\n","import RibbonButton from '../../../plugins/RibbonPlugin/RibbonButton';\nimport { toggleBullet } from 'roosterjs-editor-api';\n\n/**\n * Key of localized strings of Bulleted list button\n */\nexport type BulletedListButtonStringKey = 'buttonNameBulletedList';\n\n/**\n * \"Bulleted list\" button on the format ribbon\n */\nexport const bulletedList: RibbonButton<BulletedListButtonStringKey> = {\n    key: 'buttonNameBulletedList',\n    unlocalizedText: 'Bulleted list',\n    iconName: 'BulletedList',\n    checked: formatState => formatState.isBullet,\n    onClick: editor => {\n        toggleBullet(editor);\n        return true;\n    },\n};\n","import RibbonButton from '../../../plugins/RibbonPlugin/RibbonButton';\nimport { clearFormat as clearFormatApi } from 'roosterjs-editor-api';\n\n/**\n * Key of localized strings of Clear format button\n */\nexport type ClearFormatButtonStringKey = 'buttonNameClearFormat';\n\n/**\n * \"Clear format\" button on the format ribbon\n */\nexport const clearFormat: RibbonButton<ClearFormatButtonStringKey> = {\n    key: 'buttonNameClearFormat',\n    unlocalizedText: 'Clear format',\n    iconName: 'ClearFormatting',\n    onClick: editor => {\n        clearFormatApi(editor);\n    },\n};\n","import RibbonButton from '../../../plugins/RibbonPlugin/RibbonButton';\nimport { toggleCodeBlock } from 'roosterjs-editor-api';\n\n/**\n * Key of localized strings of Code button\n */\nexport type CodeButtonStringKey = 'buttonNameCode';\n\n/**\n * \"Code\" button on the format ribbon\n */\nexport const code: RibbonButton<CodeButtonStringKey> = {\n    key: 'buttonNameCode',\n    unlocalizedText: 'Code',\n    iconName: 'Code',\n    onClick: editor => {\n        toggleCodeBlock(editor);\n    },\n};\n","import RibbonButton from '../../../plugins/RibbonPlugin/RibbonButton';\nimport { Indentation } from 'roosterjs-editor-types';\nimport { setIndentation } from 'roosterjs-editor-api';\n\n/**\n * Key of localized strings of Decrease indent size button\n */\nexport type DecreaseIndentButtonStringKey = 'buttonNameDecreaseIntent';\n\n/**\n * \"Decrease indent\" button on the format ribbon\n */\nexport const decreaseIndent: RibbonButton<DecreaseIndentButtonStringKey> = {\n    key: 'buttonNameDecreaseIntent',\n    unlocalizedText: 'Decrease indent',\n    iconName: 'DecreaseIndentLegacy',\n    onClick: editor => {\n        setIndentation(editor, Indentation.Decrease);\n    },\n};\n","import RibbonButton from '../../../plugins/RibbonPlugin/RibbonButton';\nimport { setFontName } from 'roosterjs-editor-api';\n\ninterface FontName {\n    name: string;\n    family: string;\n    localizedName?: string;\n}\nconst FontNames: FontName[] = [\n    { name: 'Arial', family: 'Arial,Helvetica,sans-serif' },\n    { name: 'Arial Black', family: \"'Arial Black',Arial,sans-serif\" },\n    { name: 'Calibri', family: 'Calibri,Helvetica,sans-serif' },\n    { name: 'Calibri Light', family: \"'Calibri Light','Helvetica Light',sans-serif\" },\n    { name: 'Cambria', family: 'Cambria,Georgia,serif' },\n    { name: 'Candara', family: 'Candara,Optima,sans-serif' },\n    { name: 'Century Gothic', family: \"'Century Gothic',sans-serif\" },\n    { name: 'Comic Sans MS', family: \"'Comic Sans MS',Chalkboard,cursive\" },\n    { name: 'Consolas', family: 'Consolas,Courier,monospace' },\n    { name: 'Constantia', family: \"Constantia,'Hoefler Text',serif\" },\n    { name: 'Corbel', family: 'Corbel,Skia,sans-serif' },\n    { name: 'Courier New', family: \"'Courier New',monospace\" },\n    {\n        name: 'Franklin Gothic Book',\n        family: \"'Franklin Gothic Book','Avenir Next Condensed',sans-serif\",\n    },\n    {\n        name: 'Franklin Gothic Demi',\n        family: \"'Franklin Gothic Demi','Avenir Next Condensed Demi Bold',sans-serif\",\n    },\n    {\n        name: 'Franklin Gothic Medium',\n        family: \"'Franklin Gothic Medium','Avenir Next Condensed Medium',sans-serif\",\n    },\n    { name: 'Garamond', family: 'Garamond,Georgia,serif' },\n    { name: 'Georgia', family: 'Georgia,serif' },\n    { name: 'Impact', family: 'Impact,Charcoal,sans-serif' },\n    { name: 'Lucida Console', family: \"'Lucida Console',Monaco,monospace\" },\n    { name: 'Lucida Handwriting', family: \"'Lucida Handwriting','Apple Chancery',cursive\" },\n    { name: 'Lucida Sans Unicode', family: \"'Lucida Sans Unicode','Lucida Grande',sans-serif\" },\n    { name: 'Palatino Linotype', family: \"'Palatino Linotype','Book Antiqua',Palatino,serif\" },\n    {\n        name: 'Segoe UI',\n        family: \"'Segoe UI', 'Segoe UI Web (West European)', 'Helvetica Neue', sans-serif\",\n    },\n    { name: 'Sitka Heading', family: \"'Sitka Heading',Cochin,serif\" },\n    { name: 'Sitka Text', family: \"'Sitka Text',Cochin,serif\" },\n    { name: 'Tahoma', family: 'Tahoma,Geneva,sans-serif' },\n    { name: 'Times', family: \"Times,'Times New Roman',serif\" },\n    { name: 'Times New Roman', family: \"'Times New Roman',Times,serif\" },\n    { name: 'Trebuchet MS', family: \"'Trebuchet MS',Trebuchet,sans-serif\" },\n    { name: 'TW Cen MT', family: \"'TW Cen MT','Century Gothic',sans-serif\" },\n    { name: 'Verdana', family: 'Verdana,Geneva,sans-serif' },\n    { name: '-', family: 'FontDivider0' }, //divider between fonts for different scripts (order is by style)\n    {\n        name: 'Microsoft YaHei',\n        family: \"'Microsoft YaHei','微软雅黑',STHeiti,sans-serif\",\n        localizedName: '微软雅黑',\n    }, //chineseS Microsoft recommended font\n    { name: 'SimHei', family: \"SimHei,'黑体',STHeiti,sans-serif\", localizedName: '黑体' }, //chineseS\n    {\n        name: 'NSimSun',\n        family: \"NSimSun,'新宋体',SimSun,'宋体',SimSun-ExtB,'宋体-ExtB',STSong,serif\",\n        localizedName: '新宋体',\n    }, //chineseS\n    { name: 'FangSong', family: \"FangSong,'仿宋',STFangsong,serif\", localizedName: '仿宋' }, //chineseS\n    { name: 'SimLi', family: \"SimLi,'隶书','Baoli SC',serif\", localizedName: '隶书' }, //chineseS\n    { name: 'KaiTi', family: \"KaiTi,'楷体',STKaiti,serif\", localizedName: '楷体' }, //chineseS\n    { name: '-', family: 'FontDivider1' }, //divider between fonts for different scripts (order is by style)\n    {\n        name: 'Microsoft JhengHei',\n        family: \"'Microsoft JhengHei','微軟正黑體','Apple LiGothic',sans-serif\",\n        localizedName: '微軟正黑體',\n    }, //chineseT Microsoft recommended font\n    {\n        name: 'PMingLiU',\n        family: \"PMingLiU,'新細明體',PMingLiU-ExtB,'新細明體-ExtB','Apple LiSung',serif\",\n        localizedName: '新細明體',\n    }, //chineseT\n    { name: 'DFKai-SB', family: \"DFKai-SB,'標楷體','BiauKai',serif\", localizedName: '標楷體' }, //chineseT\n    { name: '-', family: 'FontDivider2' }, //divider between fonts for different scripts (order is alphabetical by foundry)\n    {\n        name: 'Meiryo',\n        family: \"Meiryo,'メイリオ','Hiragino Sans',sans-serif\",\n        localizedName: 'メイリオ',\n    }, //japanese\n    {\n        name: 'MS PGothic',\n        family:\n            \"'MS PGothic','ＭＳ Ｐゴシック','MS Gothic','ＭＳ ゴシック','Hiragino Kaku Gothic ProN',sans-serif\",\n        localizedName: 'ＭＳ Ｐゴシック',\n    }, //japanese\n    {\n        name: 'MS PMincho',\n        family: \"'MS PMincho','ＭＳ Ｐ明朝','MS Mincho','ＭＳ 明朝','Hiragino Mincho ProN',serif\",\n        localizedName: 'ＭＳ Ｐ明朝',\n    }, //japanese\n    {\n        name: 'Yu Gothic',\n        family: \"'Yu Gothic','游ゴシック','YuGothic',sans-serif\",\n        localizedName: '游ゴシック',\n    }, //japanese\n    { name: 'Yu Mincho', family: \"'Yu Mincho','游明朝','YuMincho',serif\", localizedName: '游明朝' }, //japanese\n    { name: '-', family: 'FontDivider3' }, //divider between fonts for different scripts (order is for legacy reasons)\n    {\n        name: 'Malgun Gothic',\n        family: \"'Malgun Gothic','맑은 고딕',AppleGothic,sans-serif\",\n        localizedName: '맑은 고딕',\n    }, //korean Microsoft recommended font\n    { name: 'Gulim', family: \"Gulim,'굴림','Nanum Gothic',sans-serif\", localizedName: '굴림' }, //korean\n    { name: 'Dotum', family: \"Dotum,'돋움',AppleGothic,sans-serif\", localizedName: '돋움' }, //korean\n    { name: 'Batang', family: \"Batang,'바탕',AppleMyungjo,serif\", localizedName: '바탕' }, //korean\n    { name: 'BatangChe', family: \"BatangChe,'바탕체',AppleMyungjo,serif\", localizedName: '바탕체' }, //korean\n    { name: 'Gungsuh', family: \"Gungsuh,'궁서',GungSeo,serif\", localizedName: '궁서' }, //korean\n    { name: '-', family: 'FontDivider4' }, //divider between fonts for different scripts (order is alphabetical)\n    { name: 'Leelawadee UI', family: \"'Leelawadee UI',Thonburi,sans-serif\" }, //thai Microsoft recommended font\n    { name: 'Angsana New', family: \"'Angsana New','Leelawadee UI',Sathu,serif\" }, //thai\n    { name: 'Cordia New', family: \"'Cordia New','Leelawadee UI',Silom,sans-serif\" }, //thai\n    { name: 'DaunPenh', family: \"DaunPenh,'Leelawadee UI','Khmer MN',sans-serif\" }, //khmer\n    { name: '-', family: 'FontDivider5' }, //divider between fonts for different scripts (order is alphabetical)\n    { name: 'Nirmala UI', family: \"'Nirmala UI',sans-serif\" }, //indic Microsoft recommended font\n    { name: 'Gautami', family: \"Gautami,'Nirmala UI','Telugu MN',sans-serif\" }, //indic\n    { name: 'Iskoola Pota', family: \"'Iskoola Pota','Nirmala UI','Sinhala MN',sans-serif\" }, //indic\n    { name: 'Kalinga', family: \"Kalinga,'Nirmala UI','Oriya MN',sans-serif\" }, //indic\n    { name: 'Kartika', family: \"Kartika,'Nirmala UI','Malayalam MN',sans-serif\" }, //indic\n    { name: 'Latha', family: \"Latha,'Nirmala UI','Tamil MN',sans-serif\" }, //indic\n    { name: 'Mangal', family: \"Mangal,'Nirmala UI','Devanagari Sangam MN',sans-serif\" }, //indic\n    { name: 'Raavi', family: \"Raavi,'Nirmala UI','Gurmukhi MN',sans-serif\" }, //indic\n    { name: 'Shruti', family: \"Shruti,'Nirmala UI','Gujarati Sangam MN',sans-serif\" }, //indic\n    { name: 'Tunga', family: \"Tunga,'Nirmala UI','Kannada MN',sans-serif\" }, //indic\n    { name: 'Vrinda', family: \"Vrinda,'Nirmala UI','Bangla MN',sans-serif\" }, //indic\n    { name: '-', family: 'FontDivider6' }, //divider between fonts for different scripts\n    { name: 'Nyala', family: 'Nyala,Kefa,sans-serif' }, //other-ethiopic\n    { name: 'Sylfaen', family: 'Sylfaen,Mshtakan,Menlo,serif' }, //other-armenian-georgian\n];\n\nconst DropDownItems = FontNames.reduce((items, font) => {\n    items[font.family] = font.localizedName || font.name;\n    return items;\n}, <Record<string, string>>{});\n\nconst LowerCaseFontMap = FontNames.reduce((items, font) => {\n    items[font.name.toLowerCase()] = font.family;\n    return items;\n}, <Record<string, string>>{});\n\nconst FirstFontRegex = /^['\"]?([^'\",]+)/i;\n\n/**\n * Key of localized strings of Font button\n */\nexport type FontButtonStringKey = 'buttonNameFont';\n\n/**\n * \"Font\" button on the format ribbon\n */\nexport const font: RibbonButton<FontButtonStringKey> = {\n    key: 'buttonNameFont',\n    unlocalizedText: 'Font',\n    iconName: 'Font',\n    dropDownItems: DropDownItems,\n    selectedItem: formatState => {\n        const matches = formatState.fontName?.match(FirstFontRegex);\n        const firstName = matches?.[1]?.toLowerCase();\n        const selectedKey = (firstName && LowerCaseFontMap[firstName]) || '';\n\n        return selectedKey;\n    },\n    onClick: (editor, font) => {\n        setFontName(editor, font);\n    },\n    allowLivePreview: true,\n};\n","import RibbonButton from '../../../plugins/RibbonPlugin/RibbonButton';\nimport { FONT_SIZES, setFontSize } from 'roosterjs-editor-api';\n\n/**\n * Key of localized strings of Font size button\n */\nexport type FontSizeButtonStringKey = 'buttonNameFontSize';\n\n/**\n * \"Font Size\" button on the format ribbon\n */\nexport const fontSize: RibbonButton<FontSizeButtonStringKey> = {\n    key: 'buttonNameFontSize',\n    unlocalizedText: 'Font size',\n    iconName: 'FontSize',\n    dropDownItems: FONT_SIZES.reduce((map, size) => {\n        map[size + 'pt'] = size.toString();\n        return map;\n    }, <Record<string, string>>{}),\n    selectedItem: formatState => formatState.fontSize,\n    onClick: (editor, size) => {\n        setFontSize(editor, size);\n    },\n    allowLivePreview: true,\n};\n","import RibbonButton from '../../../plugins/RibbonPlugin/RibbonButton';\nimport { toggleHeader } from 'roosterjs-editor-api';\n\nconst headers = {\n    header1: 'Header 1',\n    header2: 'Header 2',\n    header3: 'Header 3',\n    header4: 'Header 4',\n    header5: 'Header 5',\n    header6: 'Header 6',\n    headerDivider: '-',\n    noHeader: 'No header',\n};\n\n/**\n * Key of localized strings of Header button\n */\nexport type HeaderButtonStringKey = 'buttonNameHeader';\n\n/**\n * \"Header\" button on the format ribbon\n */\nexport const header: RibbonButton<HeaderButtonStringKey> = {\n    key: 'buttonNameHeader',\n    unlocalizedText: 'Header',\n    iconName: 'Header1',\n    dropDownItems: headers,\n    onClick: (editor, key) => {\n        const index = Object.keys(headers).indexOf(key) + 1;\n\n        if (index > 6) {\n            toggleHeader(editor, 0);\n        } else if (index > 0) {\n            toggleHeader(editor, index);\n        }\n    },\n};\n","import RibbonButton from '../../../plugins/RibbonPlugin/RibbonButton';\nimport { Indentation } from 'roosterjs-editor-types';\nimport { setIndentation } from 'roosterjs-editor-api';\n\n/**\n * Key of localized strings of Increase indent size button\n */\nexport type IncreaseIndentButtonStringKey = 'buttonNameIncreaseIndent';\n\n/**\n * \"Increase indent\" button on the format ribbon\n */\nexport const increaseIndent: RibbonButton<IncreaseIndentButtonStringKey> = {\n    key: 'buttonNameIncreaseIndent',\n    unlocalizedText: 'Increase indent',\n    iconName: 'IncreaseIndentLegacy',\n    onClick: editor => {\n        setIndentation(editor, Indentation.Increase);\n    },\n};\n","import RibbonButton from '../../../plugins/RibbonPlugin/RibbonButton';\nimport { toggleItalic } from 'roosterjs-editor-api';\n\n/**\n * Key of localized strings of Italic button\n */\nexport type ItalicButtonStringKey = 'buttonNameItalic';\n\n/**\n * \"Italic\" button on the format ribbon\n */\nexport const italic: RibbonButton<ItalicButtonStringKey> = {\n    key: 'buttonNameItalic',\n    unlocalizedText: 'Italic',\n    iconName: 'Italic',\n    checked: formatState => formatState.isItalic,\n    onClick: editor => {\n        toggleItalic(editor);\n        return true;\n    },\n};\n","import RibbonButton from '../../../plugins/RibbonPlugin/RibbonButton';\nimport { Direction } from 'roosterjs-editor-types';\nimport { setDirection } from 'roosterjs-editor-api';\n\n/**\n * Key of localized strings of Left to right button\n */\nexport type LtrButtonStringKey = 'buttonNameLtr';\n\n/**\n * \"Left to right\" button on the format ribbon\n */\nexport const ltr: RibbonButton<LtrButtonStringKey> = {\n    key: 'buttonNameLtr',\n    unlocalizedText: 'Left to right',\n    iconName: 'BidiLtr',\n    onClick: editor => {\n        setDirection(editor, Direction.LeftToRight);\n    },\n};\n","import RibbonButton from '../../../plugins/RibbonPlugin/RibbonButton';\nimport { toggleNumbering } from 'roosterjs-editor-api';\n\n/**\n * Key of localized strings of Numbered list button\n */\nexport type NumberedListButtonStringKey = 'buttonNameNumberedList';\n\n/**\n * \"Numbered list\" button on the format ribbon\n */\nexport const numberedList: RibbonButton<NumberedListButtonStringKey> = {\n    key: 'buttonNameNumberedList',\n    unlocalizedText: 'Numbered list',\n    iconName: 'NumberedList',\n    checked: formatState => formatState.isNumbering,\n    onClick: editor => {\n        toggleNumbering(editor);\n        return true;\n    },\n};\n","import RibbonButton from '../../../plugins/RibbonPlugin/RibbonButton';\nimport { toggleBlockQuote } from 'roosterjs-editor-api';\n\n/**\n * Key of localized strings of Quote button\n */\nexport type QuoteButtonStringKey = 'buttonNameQuote';\n\n/**\n * \"Quote\" button on the format ribbon\n */\nexport const quote: RibbonButton<QuoteButtonStringKey> = {\n    key: 'buttonNameQuote',\n    unlocalizedText: 'Quote',\n    iconName: 'RightDoubleQuote',\n    checked: formatState => formatState.isBlockQuote,\n    onClick: editor => {\n        toggleBlockQuote(editor);\n        return true;\n    },\n};\n","import RibbonButton from '../../../plugins/RibbonPlugin/RibbonButton';\n\n/**\n * Key of localized strings of Redo button\n */\nexport type RedoButtonStringKey = 'buttonNameRedo';\n\n/**\n * \"Redo\" button on the format ribbon\n */\nexport const redo: RibbonButton<RedoButtonStringKey> = {\n    key: 'buttonNameRedo',\n    unlocalizedText: 'Redo',\n    iconName: 'Redo',\n    disabled: formatState => !formatState.canRedo,\n    onClick: editor => {\n        editor.redo();\n        return true;\n    },\n};\n","import RibbonButton from '../../../plugins/RibbonPlugin/RibbonButton';\nimport { Direction } from 'roosterjs-editor-types';\nimport { setDirection } from 'roosterjs-editor-api';\n\n/**\n * Key of localized strings of Right to left button\n */\nexport type RtlButtonStringKey = 'buttonNameRtl';\n\n/**\n * \"Right to left\" button on the format ribbon\n */\nexport const rtl: RibbonButton<RtlButtonStringKey> = {\n    key: 'buttonNameRtl',\n    unlocalizedText: 'Right to left',\n    iconName: 'BidiRtl',\n    onClick: editor => {\n        setDirection(editor, Direction.RightToLeft);\n    },\n};\n","import RibbonButton from '../../../plugins/RibbonPlugin/RibbonButton';\nimport { toggleStrikethrough } from 'roosterjs-editor-api';\n\n/**\n * Key of localized strings of Strikethrough button\n */\nexport type StrikethroughButtonStringKey = 'buttonNameStrikethrough';\n\n/**\n * \"Strikethrough\" button on the format ribbon\n */\nexport const strikethrough: RibbonButton<StrikethroughButtonStringKey> = {\n    key: 'buttonNameStrikethrough',\n    unlocalizedText: 'Strikethrough',\n    iconName: 'Strikethrough',\n    checked: formatState => formatState.isStrikeThrough,\n    onClick: editor => {\n        toggleStrikethrough(editor);\n        return true;\n    },\n};\n","import RibbonButton from '../../../plugins/RibbonPlugin/RibbonButton';\nimport { toggleSubscript } from 'roosterjs-editor-api';\n\n/**\n * Key of localized strings of Subscript button\n */\nexport type SubscriptButtonStringKey = 'buttonNameSubscript';\n\n/**\n * \"Subscript\" button on the format ribbon\n */\nexport const subscript: RibbonButton<SubscriptButtonStringKey> = {\n    key: 'buttonNameSubscript',\n    unlocalizedText: 'Subscript',\n    iconName: 'Subscript',\n    checked: formatState => formatState.isSubscript,\n    onClick: editor => {\n        toggleSubscript(editor);\n        return true;\n    },\n};\n","import RibbonButton from '../../../plugins/RibbonPlugin/RibbonButton';\nimport { toggleSuperscript } from 'roosterjs-editor-api';\n\n/**\n * Key of localized strings of Superscript button\n */\nexport type SuperscriptButtonStringKey = 'buttonNameSuperscript';\n\n/**\n * \"Superscript\" button on the format ribbon\n */\nexport const superscript: RibbonButton<SuperscriptButtonStringKey> = {\n    key: 'buttonNameSuperscript',\n    unlocalizedText: 'Superscript',\n    iconName: 'Superscript',\n    checked: formatState => formatState.isSuperscript,\n    onClick: editor => {\n        toggleSuperscript(editor);\n        return true;\n    },\n};\n","import RibbonButton from '../../../plugins/RibbonPlugin/RibbonButton';\nimport { toggleUnderline } from 'roosterjs-editor-api';\n\n/**\n * Key of localized strings of Underline button\n */\nexport type UnderlineButtonStringKey = 'buttonNameUnderline';\n\n/**\n * \"Underline\" button on the format ribbon\n */\nexport const underline: RibbonButton<UnderlineButtonStringKey> = {\n    key: 'buttonNameUnderline',\n    unlocalizedText: 'Underline',\n    iconName: 'Underline',\n    checked: formatState => formatState.isUnderline,\n    onClick: editor => {\n        toggleUnderline(editor);\n        return true;\n    },\n};\n","import RibbonButton from '../../../plugins/RibbonPlugin/RibbonButton';\n\n/**\n * Key of localized strings of Undo button\n */\nexport type UndoButtonStringKey = 'buttonNameUndo';\n\n/**\n * \"Undo\" button on the format ribbon\n */\nexport const undo: RibbonButton<UndoButtonStringKey> = {\n    key: 'buttonNameUndo',\n    unlocalizedText: 'Undo',\n    iconName: 'undo',\n    disabled: formatState => !formatState.canUndo,\n    onClick: editor => {\n        editor.undo();\n        return true;\n    },\n};\n","export * from './components/Rooster/index';\nexport * from './components/Ribbon/index';\n\nexport * from './plugins/UpdateContentPlugin/index';\nexport * from './plugins/RibbonPlugin/index';\n\nexport * from './utils/index';\n","export { default as Rooster } from './Rooster';\nexport { default as RoosterProps } from './RoosterProps';\n","import * as React from 'react';\nimport RoosterProps from './RoosterProps';\nimport { Editor } from 'roosterjs-editor-core';\nimport { EditorOptions, IEditor } from 'roosterjs-editor-types';\n\n/**\n * Main component of react wrapper for roosterjs\n * @param props Properties of this component\n * @returns The react component\n */\nexport default function Rooster(props: RoosterProps) {\n    const editorDiv = React.useRef<HTMLDivElement>(null);\n    const editor = React.useRef<IEditor>(null);\n\n    const { domAttributes, editorOptions, focusOnInit, editorCreator } = props;\n    const { zoomScale, inDarkMode } = editorOptions || {};\n\n    React.useEffect(() => {\n        editor.current = (editorCreator || defaultEditorCreator)(editorDiv.current, editorOptions);\n\n        if (focusOnInit) {\n            editor.current.focus();\n        }\n\n        return () => {\n            if (editor.current) {\n                editor.current.dispose();\n                editor.current = null;\n            }\n        };\n    }, [editorCreator]);\n\n    React.useEffect(() => {\n        editor.current.setDarkModeState(!!inDarkMode);\n    }, [inDarkMode]);\n\n    React.useEffect(() => {\n        editor.current.setZoomScale(zoomScale);\n    }, [zoomScale]);\n\n    return <div ref={editorDiv} tabIndex={0} {...(domAttributes || {})}></div>;\n}\n\nfunction defaultEditorCreator(div: HTMLDivElement, options: EditorOptions) {\n    return new Editor(div, options);\n}\n","export { default as Ribbon } from './Ribbon';\nexport { default as RibbonProps } from './RibbonProps';\nexport { default as getAllButtons, AllButtonsStringKey } from './getAllButtons';\nexport { bold, BoldButtonStringKey } from './buttons/bold';\nexport { italic, ItalicButtonStringKey } from './buttons/italic';\nexport { underline, UnderlineButtonStringKey } from './buttons/underline';\nexport { font, FontButtonStringKey } from './buttons/font';\nexport { fontSize, FontSizeButtonStringKey } from './buttons/fontSize';\nexport { bulletedList, BulletedListButtonStringKey } from './buttons/bulletedList';\nexport { numberedList, NumberedListButtonStringKey } from './buttons/numberedList';\nexport { decreaseIndent, DecreaseIndentButtonStringKey } from './buttons/decreaseIndent';\nexport { increaseIndent, IncreaseIndentButtonStringKey } from './buttons/increaseIndent';\nexport { quote, QuoteButtonStringKey } from './buttons/quote';\nexport { alignLeft, AlignLeftButtonStringKey } from './buttons/alignLeft';\nexport { alignCenter, AlignCenterButtonStringKey } from './buttons/alignCenter';\nexport { alignRight, AlignRightButtonStringKey } from './buttons/alignRight';\nexport { superscript, SuperscriptButtonStringKey } from './buttons/superscript';\nexport { subscript, SubscriptButtonStringKey } from './buttons/subscript';\nexport { strikethrough, StrikethroughButtonStringKey } from './buttons/strikethrough';\nexport { header, HeaderButtonStringKey } from './buttons/header';\nexport { code, CodeButtonStringKey } from './buttons/code';\nexport { ltr, LtrButtonStringKey } from './buttons/ltr';\nexport { rtl, RtlButtonStringKey } from './buttons/rtl';\nexport { undo, UndoButtonStringKey } from './buttons/undo';\nexport { redo, RedoButtonStringKey } from './buttons/redo';\nexport { clearFormat, ClearFormatButtonStringKey } from './buttons/clearFormat';\n","import * as React from 'react';\nimport getLocalizedString from '../../utils/getLocalizedString';\nimport RibbonButton from '../../plugins/RibbonPlugin/RibbonButton';\nimport RibbonProps from './RibbonProps';\nimport { CommandBar, ICommandBarItemProps } from '@fluentui/react/lib/CommandBar';\nimport { FocusZoneDirection } from '@fluentui/react/lib/FocusZone';\nimport { FormatState } from 'roosterjs-editor-types';\nimport { IContextualMenuItem } from '@fluentui/react/lib/ContextualMenu';\nimport { mergeStyles } from '@fluentui/react/lib/Styling';\n\nconst ribbonClassName = mergeStyles({\n    '& .ms-CommandBar': {\n        padding: '0px',\n    },\n});\n\n/**\n * The format ribbon component of roosterjs-react\n * @param props Properties of format ribbon component\n * @returns The format ribbon component\n */\nexport default function Ribbon<T extends string>(props: RibbonProps<T>) {\n    const { plugin, buttons, strings, dir } = props;\n    const [formatState, setFormatState] = React.useState<FormatState>(null);\n    const isRtl = dir == 'rtl';\n\n    const onClick = React.useCallback(\n        (_, item: IContextualMenuItem) => {\n            plugin?.onButtonClick(item.data as RibbonButton<T>, item.key, strings);\n        },\n        [plugin, strings]\n    );\n\n    const onHover = React.useCallback(\n        (button: RibbonButton<T>, key: string) => {\n            plugin.startLivePreview(button, key, strings);\n        },\n        [plugin, strings]\n    );\n\n    const onDismiss = React.useCallback(() => {\n        plugin.stopLivePreview();\n    }, [plugin]);\n\n    const commandBarItems = React.useMemo((): ICommandBarItemProps[] => {\n        return buttons.map(\n            (button): ICommandBarItemProps => {\n                const selectedItem = formatState && button.selectedItem?.(formatState);\n                const dropDownItems = button.dropDownItems;\n\n                const result: ICommandBarItemProps = {\n                    key: button.key,\n                    data: button,\n                    iconProps: {\n                        iconName:\n                            isRtl && button.rtlIconName ? button.rtlIconName : button.iconName,\n                    },\n                    iconOnly: true,\n                    text: getLocalizedString(strings, button.key, button.unlocalizedText),\n                    canCheck: true,\n                    checked: (formatState && button.checked?.(formatState)) || false,\n                    disabled: (formatState && button.disabled?.(formatState)) || false,\n                };\n\n                if (dropDownItems) {\n                    result.subMenuProps = {\n                        className: button.dropDownClassName,\n                        shouldFocusOnMount: true,\n                        focusZoneProps: { direction: FocusZoneDirection.bidirectional },\n                        onDismiss: onDismiss,\n                        onItemClick: onClick,\n                        onRenderContextualMenuItem: button.allowLivePreview\n                            ? (props, defaultRenderer) => (\n                                  <div onMouseOver={e => onHover(button, props.key)}>\n                                      {defaultRenderer(props)}\n                                  </div>\n                              )\n                            : undefined,\n                        items: Object.keys(button.dropDownItems).map(key => ({\n                            key: key,\n                            text: getLocalizedString(strings, key, dropDownItems[key]),\n                            data: button,\n                            canCheck: !!button.selectedItem,\n                            checked: selectedItem == key || false,\n                            className: button.itemClassName,\n                            onRender: button.dropDownItemRender\n                                ? item => button.dropDownItemRender(item, onClick)\n                                : undefined,\n                        })),\n                    };\n                } else {\n                    result.onClick = onClick;\n                }\n\n                return result;\n            }\n        );\n    }, [buttons, formatState, isRtl, strings, onClick, onDismiss, onHover]);\n\n    React.useEffect(() => {\n        const disposer = plugin?.registerFormatChangedCallback(setFormatState);\n\n        return () => {\n            disposer?.();\n        };\n    }, [plugin]);\n\n    return (\n        <CommandBar\n            items={commandBarItems}\n            {...props}\n            className={ribbonClassName + ' ' + (props?.className || '')}\n        />\n    );\n}\n","import RibbonButton from '../../plugins/RibbonPlugin/RibbonButton';\nimport { alignCenter, AlignCenterButtonStringKey } from './buttons/alignCenter';\nimport { alignLeft, AlignLeftButtonStringKey } from './buttons/alignLeft';\nimport { alignRight, AlignRightButtonStringKey } from './buttons/alignRight';\nimport { bold, BoldButtonStringKey } from './buttons/bold';\nimport { bulletedList, BulletedListButtonStringKey } from './buttons/bulletedList';\nimport { clearFormat, ClearFormatButtonStringKey } from './buttons/clearFormat';\nimport { code, CodeButtonStringKey } from './buttons/code';\nimport { decreaseIndent, DecreaseIndentButtonStringKey } from './buttons/decreaseIndent';\nimport { font, FontButtonStringKey } from './buttons/font';\nimport { fontSize, FontSizeButtonStringKey } from './buttons/fontSize';\nimport { header, HeaderButtonStringKey } from './buttons/header';\nimport { increaseIndent, IncreaseIndentButtonStringKey } from './buttons/increaseIndent';\nimport { italic, ItalicButtonStringKey } from './buttons/italic';\nimport { ltr, LtrButtonStringKey } from './buttons/ltr';\nimport { numberedList, NumberedListButtonStringKey } from './buttons/numberedList';\nimport { quote, QuoteButtonStringKey } from './buttons/quote';\nimport { redo, RedoButtonStringKey } from './buttons/redo';\nimport { rtl, RtlButtonStringKey } from './buttons/rtl';\nimport { strikethrough, StrikethroughButtonStringKey } from './buttons/strikethrough';\nimport { subscript, SubscriptButtonStringKey } from './buttons/subscript';\nimport { superscript, SuperscriptButtonStringKey } from './buttons/superscript';\nimport { underline, UnderlineButtonStringKey } from './buttons/underline';\nimport { undo, UndoButtonStringKey } from './buttons/undo';\n\n/**\n * A public type for localized string keys of all buttons\n */\nexport type AllButtonsStringKey =\n    | AlignLeftButtonStringKey\n    | AlignCenterButtonStringKey\n    | AlignRightButtonStringKey\n    | BoldButtonStringKey\n    | BulletedListButtonStringKey\n    | ClearFormatButtonStringKey\n    | CodeButtonStringKey\n    | DecreaseIndentButtonStringKey\n    | FontButtonStringKey\n    | FontSizeButtonStringKey\n    | HeaderButtonStringKey\n    | IncreaseIndentButtonStringKey\n    | ItalicButtonStringKey\n    | LtrButtonStringKey\n    | NumberedListButtonStringKey\n    | QuoteButtonStringKey\n    | RedoButtonStringKey\n    | RtlButtonStringKey\n    | StrikethroughButtonStringKey\n    | SubscriptButtonStringKey\n    | SuperscriptButtonStringKey\n    | UnderlineButtonStringKey\n    | UndoButtonStringKey;\n\n/**\n * A shortcut to get all format buttons provided by roosterjs-react\n * @returns An array of all buttons\n */\nexport default function getAllButtons(): RibbonButton<AllButtonsStringKey>[] {\n    return [\n        bold,\n        italic,\n        underline,\n        font,\n        fontSize,\n        bulletedList,\n        numberedList,\n        decreaseIndent,\n        increaseIndent,\n        quote,\n        alignLeft,\n        alignCenter,\n        alignRight,\n        superscript,\n        subscript,\n        strikethrough,\n        header,\n        code,\n        ltr,\n        rtl,\n        undo,\n        redo,\n        clearFormat,\n    ];\n}\n","export { UpdateMode } from './UpdateMode';\nexport { default as UpdateContentPlugin } from './UpdateContentPlugin';\n","import { EditorPlugin, IEditor, PluginEvent, PluginEventType } from 'roosterjs-editor-types';\nimport { UpdateMode } from './UpdateMode';\n\n/**\n * A plugin to help get HTML content from editor\n */\nexport default class UpdateContentPlugin implements EditorPlugin {\n    private editor: IEditor;\n    private disposer: () => void;\n\n    /**\n     * Create a new instance of UpdateContentPlugin class\n     * @param updateMode Mode of automatic update. It can be a combination of multiple UpdateMode values\n     * @param onUpdate A callback to be invoked when update happens\n     */\n    constructor(\n        private updateMode: UpdateMode,\n        private onUpdate: (html: string, mode: UpdateMode) => void\n    ) {}\n\n    /**\n     * Get a friendly name of this plugin\n     */\n    getName() {\n        return 'UpdateContent';\n    }\n\n    /**\n     * Initialize this plugin\n     * @param editor The editor instance\n     */\n    initialize(editor: IEditor) {\n        this.editor = editor;\n        this.disposer = this.editor.addDomEventHandler('blur', this.onBlur);\n    }\n\n    /**\n     * Dispose this plugin\n     */\n    dispose() {\n        this.disposer?.();\n        this.disposer = null;\n        this.editor = null;\n    }\n\n    /**\n     * Handle events triggered from editor\n     * @param event PluginEvent object\n     */\n    onPluginEvent(event: PluginEvent) {\n        switch (event.eventType) {\n            case PluginEventType.EditorReady:\n                this.update(UpdateMode.OnInitialize);\n                break;\n\n            case PluginEventType.BeforeDispose:\n                this.update(UpdateMode.OnDispose);\n                break;\n\n            case PluginEventType.ContentChanged:\n                this.update(UpdateMode.OnContentChangedEvent);\n                break;\n\n            case PluginEventType.Input:\n                this.update(UpdateMode.OnUserInput);\n                break;\n        }\n    }\n\n    /**\n     * Trigger a force update. onUpdate callback will be invoked with HTML content of editor\n     */\n    forceUpdate() {\n        this.update(UpdateMode.Force);\n    }\n\n    private onBlur = () => {\n        this.update(UpdateMode.OnBlur);\n    };\n\n    private update(mode: UpdateMode) {\n        if (\n            this.editor &&\n            (mode == UpdateMode.Force || ((this.updateMode || 0) & mode) == mode) &&\n            this.onUpdate\n        ) {\n            const content = this.editor.getContent();\n            this.onUpdate(content, mode);\n        }\n    }\n}\n","export { default as createRibbonPlugin } from './createRibbonPlugin';\nexport { default as IRibbonPlugin } from './IRibbonPlugin';\nexport { default as RibbonButton } from './RibbonButton';\n","import IRibbonPlugin from './IRibbonPlugin';\nimport RibbonButton from './RibbonButton';\nimport { FormatState, IEditor, PluginEvent, PluginEventType } from 'roosterjs-editor-types';\nimport { getFormatState } from 'roosterjs-editor-api';\nimport { LocalizedStrings } from '../../utils/LocalizedStrings';\n\n/**\n * A plugin to connect format ribbon component and the editor\n */\nclass RibbonPlugin implements IRibbonPlugin {\n    private editor: IEditor;\n    private onFormatChanged: (formatState: FormatState) => void;\n    private timer = 0;\n    private formatState: FormatState;\n\n    /**\n     * Construct a new instance of RibbonPlugin object\n     * @param delayUpdateTime The time to wait before refresh the button when user do some editing operation in editor\n     */\n    constructor(private delayUpdateTime: number = 200) {}\n\n    /**\n     * Get a friendly name of this plugin\n     */\n    getName() {\n        return 'Ribbon';\n    }\n\n    /**\n     * Initialize this plugin\n     * @param editor The editor instance\n     */\n    initialize(editor: IEditor) {\n        this.editor = editor;\n    }\n\n    /**\n     * Dispose this plugin\n     */\n    dispose() {\n        this.editor = null;\n    }\n\n    /**\n     * Handle events triggered from editor\n     * @param event PluginEvent object\n     */\n    onPluginEvent(event: PluginEvent) {\n        switch (event.eventType) {\n            case PluginEventType.EditorReady:\n            case PluginEventType.ContentChanged:\n            case PluginEventType.ZoomChanged:\n                this.updateFormat();\n                break;\n\n            case PluginEventType.KeyDown:\n            case PluginEventType.MouseDown:\n                this.delayUpdate();\n                break;\n        }\n    }\n\n    /**\n     * Register a callback to be invoked when format state of editor is changed, returns a disposer function.\n     */\n    registerFormatChangedCallback(callback: (formatState: FormatState) => void) {\n        this.onFormatChanged = callback;\n\n        return () => {\n            this.onFormatChanged = null;\n        };\n    }\n\n    /**\n     * When user clicks on a button, call this method to let the plugin to handle this click event\n     * @param button The button that is clicked\n     * @param key Key of child menu item that is clicked if any\n     * @param strings The localized string map for this button\n     */\n    onButtonClick<T extends string>(button: RibbonButton<T>, key: T, strings: LocalizedStrings<T>) {\n        if (this.editor) {\n            this.editor.stopShadowEdit();\n\n            if (button.onClick(this.editor, key, strings)) {\n                this.updateFormat();\n            }\n        }\n    }\n\n    /**\n     * Enter live preview state (shadow edit) of editor if there is a non-collapsed selection\n     * @param button The button that triggered this action\n     * @param key Key of the hovered button sub item\n     * @param strings The localized string map for this button\n     */\n    startLivePreview<T extends string>(\n        button: RibbonButton<T>,\n        key: string,\n        strings: LocalizedStrings<T>\n    ) {\n        if (this.editor) {\n            const isInShadowEdit = this.editor.isInShadowEdit();\n\n            // If editor is already in shadow edit, no need to check again.\n            // And the check result may be incorrect because the content is changed from last shadow edit and the cached selection path won't apply\n            const range = !isInShadowEdit && this.editor.getSelectionRangeEx();\n\n            if (isInShadowEdit || (range && !range.areAllCollapsed)) {\n                this.editor.startShadowEdit();\n                button.onClick(this.editor, key, strings);\n            }\n        }\n    }\n\n    /**\n     * Leave live preview state (shadow edit) of editor\n     */\n    stopLivePreview() {\n        this.editor?.stopShadowEdit();\n    }\n\n    private delayUpdate() {\n        const window = this.editor.getDocument().defaultView;\n\n        if (this.timer) {\n            window.clearTimeout(this.timer);\n        }\n\n        this.timer = window.setTimeout(() => {\n            this.timer = 0;\n            this.updateFormat?.();\n        }, this.delayUpdateTime);\n    }\n\n    private updateFormat() {\n        if (this.editor && this.onFormatChanged) {\n            const newFormatState = getFormatState(this.editor);\n\n            if (\n                !this.formatState ||\n                Object.keys(newFormatState).some(\n                    (key: keyof FormatState) => newFormatState[key] != this.formatState[key]\n                )\n            ) {\n                this.formatState = newFormatState;\n                this.onFormatChanged(newFormatState);\n            }\n        }\n    }\n}\n\n/**\n * Create a new instance of RibbonPlugin object\n * @param delayUpdateTime The time to wait before refresh the button when user do some editing operation in editor\n */\nexport default function createRibbonPlugin(delayUpdateTime?: number): IRibbonPlugin {\n    return new RibbonPlugin(delayUpdateTime);\n}\n","export { LocalizedStrings, OkButtonStringKey, CancelButtonStringKey } from './LocalizedStrings';\nexport { default as getLocalizedString } from './getLocalizedString';\n"],"sourceRoot":""}