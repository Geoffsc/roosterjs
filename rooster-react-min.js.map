{"version":3,"sources":["webpack://roosterjsReact/webpack/bootstrap","webpack://roosterjsReact/external \"roosterjs\"","webpack://roosterjsReact/external \"React\"","webpack://roosterjsReact/./packages-ui/roosterjs-react/lib/components/Ribbon/buttons/alignCenter.ts","webpack://roosterjsReact/./packages-ui/roosterjs-react/lib/components/Ribbon/buttons/alignLeft.ts","webpack://roosterjsReact/./packages-ui/roosterjs-react/lib/components/Ribbon/buttons/alignRight.ts","webpack://roosterjsReact/./packages-ui/roosterjs-react/lib/components/Ribbon/buttons/bold.ts","webpack://roosterjsReact/./packages-ui/roosterjs-react/lib/components/Ribbon/buttons/bulletedList.ts","webpack://roosterjsReact/./packages-ui/roosterjs-react/lib/components/Ribbon/buttons/clearFormat.ts","webpack://roosterjsReact/./packages-ui/roosterjs-react/lib/components/Ribbon/buttons/code.ts","webpack://roosterjsReact/./packages-ui/roosterjs-react/lib/components/Ribbon/buttons/decreaseIndent.ts","webpack://roosterjsReact/./packages-ui/roosterjs-react/lib/components/Ribbon/buttons/font.ts","webpack://roosterjsReact/./packages-ui/roosterjs-react/lib/components/Ribbon/buttons/fontSize.ts","webpack://roosterjsReact/./packages-ui/roosterjs-react/lib/components/Ribbon/buttons/header.ts","webpack://roosterjsReact/./packages-ui/roosterjs-react/lib/components/Ribbon/buttons/increaseIndent.ts","webpack://roosterjsReact/./packages-ui/roosterjs-react/lib/components/Ribbon/buttons/italic.ts","webpack://roosterjsReact/./packages-ui/roosterjs-react/lib/components/Ribbon/buttons/ltr.ts","webpack://roosterjsReact/./packages-ui/roosterjs-react/lib/components/Ribbon/buttons/numberedList.ts","webpack://roosterjsReact/./packages-ui/roosterjs-react/lib/components/Ribbon/buttons/quote.ts","webpack://roosterjsReact/./packages-ui/roosterjs-react/lib/components/Ribbon/buttons/redo.ts","webpack://roosterjsReact/./packages-ui/roosterjs-react/lib/components/Ribbon/buttons/rtl.ts","webpack://roosterjsReact/./packages-ui/roosterjs-react/lib/components/Ribbon/buttons/strikethrough.ts","webpack://roosterjsReact/./packages-ui/roosterjs-react/lib/components/Ribbon/buttons/subscript.ts","webpack://roosterjsReact/./packages-ui/roosterjs-react/lib/components/Ribbon/buttons/superscript.ts","webpack://roosterjsReact/./packages-ui/roosterjs-react/lib/components/Ribbon/buttons/underline.ts","webpack://roosterjsReact/./packages-ui/roosterjs-react/lib/components/Ribbon/buttons/undo.ts","webpack://roosterjsReact/./packages-ui/roosterjs-react/lib/index.ts","webpack://roosterjsReact/./packages-ui/roosterjs-react/lib/components/Rooster/index.ts","webpack://roosterjsReact/./packages-ui/roosterjs-react/lib/components/Rooster/Rooster.tsx","webpack://roosterjsReact/./packages-ui/roosterjs-react/lib/components/Ribbon/index.ts","webpack://roosterjsReact/./packages-ui/roosterjs-react/lib/components/Ribbon/Ribbon.tsx","webpack://roosterjsReact/external \"FluentUIReact\"","webpack://roosterjsReact/./packages-ui/roosterjs-react/lib/components/Ribbon/getAllButtons.ts","webpack://roosterjsReact/./packages-ui/roosterjs-react/lib/plugins/UpdateContentPlugin/index.ts","webpack://roosterjsReact/./packages-ui/roosterjs-react/lib/plugins/UpdateContentPlugin/UpdateContentPlugin.ts","webpack://roosterjsReact/./packages-ui/roosterjs-react/lib/plugins/RibbonPlugin/index.ts","webpack://roosterjsReact/./packages-ui/roosterjs-react/lib/plugins/RibbonPlugin/createRibbonPlugin.ts","webpack://roosterjsReact/./packages-ui/roosterjs-react/lib/utils/index.ts","webpack://roosterjsReact/./packages-ui/roosterjs-react/lib/utils/getLocalizedString.ts"],"names":["installedModules","__webpack_require__","moduleId","exports","module","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","roosterjs","React","alignCenter","unlocalizedText","iconName","onClick","editor","setAlignment","alignLeft","alignRight","bold","checked","formatState","isBold","toggleBold","bulletedList","isBullet","toggleBullet","clearFormat","code","toggleCodeBlock","decreaseIndent","setIndentation","font","dropDownItems","Divider0","Divider1","Divider2","Divider4","Divider5","Divider6","setFontName","allowLivePreview","fontSize","FONT_SIZES","reduce","map","size","toString","setFontSize","headers","header1","header2","header3","header4","header5","header6","headerDivider","noHeader","header","index","keys","indexOf","toggleHeader","increaseIndent","italic","isItalic","toggleItalic","ltr","setDirection","numberedList","isNumbering","toggleNumbering","quote","isBlockQuote","toggleBlockQuote","redo","disabled","canRedo","rtl","strikethrough","isStrikeThrough","toggleStrikethrough","subscript","isSubscript","toggleSubscript","superscript","isSuperscript","underline","isUnderline","toggleUnderline","undo","canUndo","default","defaultEditorCreator","div","options","Editor","props","editorDiv","useRef","domAttributes","editorOptions","focusOnInit","editorCreator","zoomScale","inDarkMode","useEffect","current","focus","dispose","setDarkModeState","setZoomScale","ref","tabIndex","LivePreviewItem","menuItemProps","defaultRenderers","onHover","onMouseOver","item","data","style","width","height","overflow","renderItemName","getButtonText","strings","str","plugin","buttons","isRtl","useState","setFormatState","useCallback","_","onButtonClick","button","startLivePreview","onDismiss","stopLivePreview","commandBarItems","useMemo","iconProps","rtlIconName","iconOnly","text","subMenuProps","onItemClick","items","onRenderContent","undefined","disposer","registerFormatChangedCallback","CommandBar","dir","FluentUIReact","updateMode","onUpdate","onBlur","update","getName","initialize","this","addDomEventHandler","onPluginEvent","event","eventType","forceUpdate","content","getContent","delayUpdateTime","timer","updateFormat","delayUpdate","callback","onFormatChanged","stopShadowEdit","isInShadowEdit","range","getSelectionRangeEx","areAllCollapsed","startShadowEdit","window","getDocument","defaultView","clearTimeout","setTimeout","getFormatState","RibbonPlugin","defaultString"],"mappings":"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","file":"rooster-react-min.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 25);\n","module.exports = roosterjs;","module.exports = React;","import RibbonButton from '../../../plugins/RibbonPlugin/RibbonButton';\nimport { Alignment } from 'roosterjs-editor-types';\nimport { setAlignment } from 'roosterjs-editor-api';\n\n/**\n * \"Align center\" button on the format ribbon\n */\nexport const alignCenter: RibbonButton = {\n    key: 'alignCenter',\n    unlocalizedText: 'Align center',\n    iconName: 'AlignCenter',\n    onClick: editor => {\n        setAlignment(editor, Alignment.Center);\n    },\n};\n","import RibbonButton from '../../../plugins/RibbonPlugin/RibbonButton';\nimport { Alignment } from 'roosterjs-editor-types';\nimport { setAlignment } from 'roosterjs-editor-api';\n\n/**\n * \"Align left\" button on the format ribbon\n */\nexport const alignLeft: RibbonButton = {\n    key: 'alignLeft',\n    unlocalizedText: 'Align left',\n    iconName: 'AlignLeft',\n    onClick: editor => {\n        setAlignment(editor, Alignment.Left);\n    },\n};\n","import RibbonButton from '../../../plugins/RibbonPlugin/RibbonButton';\nimport { Alignment } from 'roosterjs-editor-types';\nimport { setAlignment } from 'roosterjs-editor-api';\n\n/**\n * \"Align right\" button on the format ribbon\n */\nexport const alignRight: RibbonButton = {\n    key: 'alignRight',\n    unlocalizedText: 'Align right',\n    iconName: 'AlignRight',\n    onClick: editor => {\n        setAlignment(editor, Alignment.Right);\n    },\n};\n","import RibbonButton from '../../../plugins/RibbonPlugin/RibbonButton';\nimport { toggleBold } from 'roosterjs-editor-api';\n\n/**\n * \"Bold\" button on the format ribbon\n */\nexport const bold: RibbonButton = {\n    key: 'bold',\n    unlocalizedText: 'Bold',\n    iconName: 'Bold',\n    checked: formatState => formatState.isBold,\n    onClick: editor => {\n        toggleBold(editor);\n        return true;\n    },\n};\n","import RibbonButton from '../../../plugins/RibbonPlugin/RibbonButton';\nimport { toggleBullet } from 'roosterjs-editor-api';\n\n/**\n * \"Bulleted list\" button on the format ribbon\n */\nexport const bulletedList: RibbonButton = {\n    key: 'bulletedList',\n    unlocalizedText: 'Bulleted list',\n    iconName: 'BulletedList',\n    checked: formatState => formatState.isBullet,\n    onClick: editor => {\n        toggleBullet(editor);\n        return true;\n    },\n};\n","import RibbonButton from '../../../plugins/RibbonPlugin/RibbonButton';\nimport { clearFormat as clearFormatApi } from 'roosterjs-editor-api';\n\n/**\n * \"Clear format\" button on the format ribbon\n */\nexport const clearFormat: RibbonButton = {\n    key: 'clearFormat',\n    unlocalizedText: 'Clear format',\n    iconName: 'ClearFormatting',\n    onClick: editor => {\n        clearFormatApi(editor);\n    },\n};\n","import RibbonButton from '../../../plugins/RibbonPlugin/RibbonButton';\nimport { toggleCodeBlock } from 'roosterjs-editor-api';\n\n/**\n * \"Code\" button on the format ribbon\n */\nexport const code: RibbonButton = {\n    key: 'code',\n    unlocalizedText: 'Code',\n    iconName: 'Code',\n    onClick: editor => {\n        toggleCodeBlock(editor);\n    },\n};\n","import RibbonButton from '../../../plugins/RibbonPlugin/RibbonButton';\nimport { Indentation } from 'roosterjs-editor-types';\nimport { setIndentation } from 'roosterjs-editor-api';\n\n/**\n * \"Decrease indent\" button on the format ribbon\n */\nexport const decreaseIndent: RibbonButton = {\n    key: 'decreaseIndent',\n    unlocalizedText: 'Decrease indent',\n    iconName: 'DecreaseIndentLegacy',\n    onClick: editor => {\n        setIndentation(editor, Indentation.Decrease);\n    },\n};\n","import RibbonButton from '../../../plugins/RibbonPlugin/RibbonButton';\nimport { setFontName } from 'roosterjs-editor-api';\n\nconst FontName = {\n    'Arial,Helvetica,sans-serif': 'Arial',\n    \"'Arial Black',Arial,sans-serif\": 'Arial Black',\n    'Calibri,Helvetica,sans-serif': 'Calibri',\n    \"'Calibri Light','Helvetica Light',sans-serif\": 'Calibri Light',\n    'Cambria,Georgia,serif': 'Cambria',\n    'Candara,Optima,sans-serif': 'Candara',\n    \"'Century Gothic',sans-serif\": 'Century Gothic',\n    \"'Comic Sans MS',Chalkboard,cursive\": 'Comic Sans MS',\n    'Consolas,Courier,monospace': 'Consolas',\n    \"Constantia,'Hoefler Text',serif\": 'Constantia',\n    'Corbel,Skia,sans-serif': 'Corbel',\n    \"'Courier New',monospace\": 'Courier New',\n    \"'Franklin Gothic Book','Avenir Next Condensed',sans-serif\": 'Franklin Gothic Book',\n    \"'Franklin Gothic Demi','Avenir Next Condensed Demi Bold',sans-serif\": 'Franklin Gothic Demi',\n    \"'Franklin Gothic Medium','Avenir Next Condensed Medium',sans-serif\": 'Franklin Gothic Medium',\n    'Garamond,Georgia,serif': 'Garamond',\n    'Georgia,serif': 'Georgia',\n    'Impact,Charcoal,sans-serif': 'Impact',\n    \"'Lucida Console',Monaco,monospace\": 'Lucida Console',\n    \"'Lucida Handwriting','Apple Chancery',cursive\": 'Lucida Handwriting',\n    \"'Lucida Sans Unicode','Lucida Grande',sans-serif\": 'Lucida Sans Unicode',\n    \"'Palatino Linotype','Book Antiqua',Palatino,serif\": 'Palatino Linotype',\n    \"'Segoe UI', 'Segoe UI Web (West European)', 'Helvetica Neue', sans-serif\": 'Segoe UI',\n    \"'Sitka Heading',Cochin,serif\": 'Sitka Heading',\n    \"'Sitka Text',Cochin,serif\": 'Sitka Text',\n    'Tahoma,Geneva,sans-serif': 'Tahoma',\n    \"Times,'Times New Roman',serif\": 'Times',\n    \"'Times New Roman',Times,serif\": 'Times New Roman',\n    \"'Trebuchet MS',Trebuchet,sans-serif\": 'Trebuchet MS',\n    \"'TW Cen MT','Century Gothic',sans-serif\": 'TW Cen MT',\n    'Verdana,Geneva,sans-serif': 'Verdana',\n    Divider0: '-', //divider between fonts for different scripts (order is by style)\n    \"'Microsoft YaHei','微软雅黑',STHeiti,sans-serif\": '微软雅黑',\n    \"SimHei,'黑体',STHeiti,sans-serif\": '黑体',\n    \"NSimSun,'新宋体',SimSun,'宋体',SimSun-ExtB,'宋体-ExtB',STSong,serif\": '新宋体',\n    \"FangSong,'仿宋',STFangsong,serif\": '仿宋',\n    \"SimLi,'隶书','Baoli SC',serif\": '隶书',\n    \"KaiTi,'楷体',STKaiti,serif\": '楷体',\n    Divider1: '-', //divider between fonts for different scripts (order is by style)\n    \"'Microsoft JhengHei','微軟正黑體','Apple LiGothic',sans-serif\": '微軟正黑體',\n    \"PMingLiU,'新細明體',PMingLiU-ExtB,'新細明體-ExtB','Apple LiSung',serif\": '新細明體',\n    \"DFKai-SB,'標楷體','BiauKai',serif\": '標楷體',\n    Divider2: '-', //divider between fonts for different scripts (order is alphabetical by foundry)\n    \"Meiryo,'メイリオ','Hiragino Sans',sans-serif\": 'メイリオ',\n    \"'MS PGothic','ＭＳ Ｐゴシック','MS Gothic','ＭＳ ゴシック','Hiragino Kaku Gothic ProN',sans-serif\":\n        'ＭＳ Ｐゴシック',\n    \"'MS PMincho','ＭＳ Ｐ明朝','MS Mincho','ＭＳ 明朝','Hiragino Mincho ProN',serif\":\n        'ＭＳ Ｐ明朝',\n    \"'Yu Gothic','游ゴシック','YuGothic',sans-serif\": '游ゴシック',\n    \"'Yu Mincho','游明朝','YuMincho',serif\": '游明朝',\n    'Divider3-': '-', //divider between fonts for different scripts (order is for legacy reasons)\n    \"'Malgun Gothic','맑은 고딕',AppleGothic,sans-serif\": '맑은 고딕',\n    \"Gulim,'굴림','Nanum Gothic',sans-serif\": '굴림',\n    \"Dotum,'돋움',AppleGothic,sans-serif\": '돋움',\n    \"Batang,'바탕',AppleMyungjo,serif\": '바탕',\n    \"BatangChe,'바탕체',AppleMyungjo,serif\": '바탕체',\n    \"Gungsuh,'궁서',GungSeo,serif\": '궁서',\n    Divider4: '-', //divider between fonts for different scripts (order is alphabetical)\n    \"'Leelawadee UI',Thonburi,sans-serif\": 'Leelawadee UI', //thai Microsoft recommended font\n    \"'Angsana New','Leelawadee UI',Sathu,serif\": 'Angsana New', //thai\n    \"'Cordia New','Leelawadee UI',Silom,sans-serif\": 'Cordia New', //thai\n    \"DaunPenh,'Leelawadee UI','Khmer MN',sans-serif\": 'DaunPenh', //khmer\n    Divider5: '-', //divider between fonts for different scripts (order is alphabetical)\n    \"'Nirmala UI',sans-serif\": 'Nirmala UI', //indic Microsoft recommended font\n    \"Gautami,'Nirmala UI','Telugu MN',sans-serif\": 'Gautami', //indic\n    \"'Iskoola Pota','Nirmala UI','Sinhala MN',sans-serif\": 'Iskoola Pota', //indic\n    \"Kalinga,'Nirmala UI','Oriya MN',sans-serif\": 'Kalinga', //indic\n    \"Kartika,'Nirmala UI','Malayalam MN',sans-serif\": 'Kartika', //indic\n    \"Latha,'Nirmala UI','Tamil MN',sans-serif\": 'Latha', //indic\n    \"Mangal,'Nirmala UI','Devanagari Sangam MN',sans-serif\": 'Mangal', //indic\n    \"Raavi,'Nirmala UI','Gurmukhi MN',sans-serif\": 'Raavi', //indic\n    \"Shruti,'Nirmala UI','Gujarati Sangam MN',sans-serif\": 'Shruti', //indic\n    \"Tunga,'Nirmala UI','Kannada MN',sans-serif\": 'Tunga', //indic\n    \"Vrinda,'Nirmala UI','Bangla MN',sans-serif\": 'Vrinda', //indic\n    Divider6: '-', //divider between fonts for different scripts\n    'Nyala,Kefa,sans-serif': 'Nyala', //other-ethiopic\n    'Sylfaen,Mshtakan,Menlo,serif': 'Sylfaen', //other-armenian-georgian\n};\n\n/**\n * \"Font\" button on the format ribbon\n */\nexport const font: RibbonButton = {\n    key: 'font',\n    unlocalizedText: 'Font',\n    iconName: 'Font',\n    dropDownItems: FontName,\n    onClick: (editor, font) => {\n        setFontName(editor, font);\n    },\n    allowLivePreview: true,\n};\n","import RibbonButton from '../../../plugins/RibbonPlugin/RibbonButton';\nimport { FONT_SIZES, setFontSize } from 'roosterjs-editor-api';\n\n/**\n * \"Font Size\" button on the format ribbon\n */\nexport const fontSize: RibbonButton = {\n    key: 'fontSize',\n    unlocalizedText: 'Font size',\n    iconName: 'FontSize',\n    dropDownItems: FONT_SIZES.reduce((map, size) => {\n        map[size + 'pt'] = size.toString();\n        return map;\n    }, <Record<string, string>>{}),\n    onClick: (editor, size) => {\n        setFontSize(editor, size);\n    },\n    allowLivePreview: true,\n};\n","import RibbonButton from '../../../plugins/RibbonPlugin/RibbonButton';\nimport { toggleHeader } from 'roosterjs-editor-api';\n\nconst headers = {\n    header1: 'Header 1',\n    header2: 'Header 2',\n    header3: 'Header 3',\n    header4: 'Header 4',\n    header5: 'Header 5',\n    header6: 'Header 6',\n    headerDivider: '-',\n    noHeader: 'No header',\n};\n\n/**\n * \"Header\" button on the format ribbon\n */\nexport const header: RibbonButton = {\n    key: 'header',\n    unlocalizedText: 'Header',\n    iconName: 'Header1',\n    dropDownItems: headers,\n    onClick: (editor, key) => {\n        const index = Object.keys(headers).indexOf(key) + 1;\n\n        if (index > 6) {\n            toggleHeader(editor, 0);\n        } else if (index > 0) {\n            toggleHeader(editor, index);\n        }\n    },\n};\n","import RibbonButton from '../../../plugins/RibbonPlugin/RibbonButton';\nimport { Indentation } from 'roosterjs-editor-types';\nimport { setIndentation } from 'roosterjs-editor-api';\n\n/**\n * \"Increase indent\" button on the format ribbon\n */\nexport const increaseIndent: RibbonButton = {\n    key: 'increaseIndent',\n    unlocalizedText: 'Increase indent',\n    iconName: 'IncreaseIndentLegacy',\n    onClick: editor => {\n        setIndentation(editor, Indentation.Increase);\n    },\n};\n","import RibbonButton from '../../../plugins/RibbonPlugin/RibbonButton';\nimport { toggleItalic } from 'roosterjs-editor-api';\n\n/**\n * \"Italic\" button on the format ribbon\n */\nexport const italic: RibbonButton = {\n    key: 'italic',\n    unlocalizedText: 'Italic',\n    iconName: 'Italic',\n    checked: formatState => formatState.isItalic,\n    onClick: editor => {\n        toggleItalic(editor);\n        return true;\n    },\n};\n","import RibbonButton from '../../../plugins/RibbonPlugin/RibbonButton';\nimport { Direction } from 'roosterjs-editor-types';\nimport { setDirection } from 'roosterjs-editor-api';\n\n/**\n * \"Left to right\" button on the format ribbon\n */\nexport const ltr: RibbonButton = {\n    key: 'ltr',\n    unlocalizedText: 'Left to right',\n    iconName: 'BidiLtr',\n    onClick: editor => {\n        setDirection(editor, Direction.LeftToRight);\n    },\n};\n","import RibbonButton from '../../../plugins/RibbonPlugin/RibbonButton';\nimport { toggleNumbering } from 'roosterjs-editor-api';\n\n/**\n * \"Numbered list\" button on the format ribbon\n */\nexport const numberedList: RibbonButton = {\n    key: 'numberedList',\n    unlocalizedText: 'Numbered list',\n    iconName: 'NumberedList',\n    checked: formatState => formatState.isNumbering,\n    onClick: editor => {\n        toggleNumbering(editor);\n        return true;\n    },\n};\n","import RibbonButton from '../../../plugins/RibbonPlugin/RibbonButton';\nimport { toggleBlockQuote } from 'roosterjs-editor-api';\n\n/**\n * \"Quote\" button on the format ribbon\n */\nexport const quote: RibbonButton = {\n    key: 'quote',\n    unlocalizedText: 'Quote',\n    iconName: 'RightDoubleQuote',\n    checked: formatState => formatState.isBlockQuote,\n    onClick: editor => {\n        toggleBlockQuote(editor);\n        return true;\n    },\n};\n","import RibbonButton from '../../../plugins/RibbonPlugin/RibbonButton';\n\n/**\n * \"Redo\" button on the format ribbon\n */\nexport const redo: RibbonButton = {\n    key: 'redo',\n    unlocalizedText: 'Redo',\n    iconName: 'Redo',\n    disabled: formatState => !formatState.canRedo,\n    onClick: editor => {\n        editor.redo();\n        return true;\n    },\n};\n","import RibbonButton from '../../../plugins/RibbonPlugin/RibbonButton';\nimport { Direction } from 'roosterjs-editor-types';\nimport { setDirection } from 'roosterjs-editor-api';\n\n/**\n * \"Right to left\" button on the format ribbon\n */\nexport const rtl: RibbonButton = {\n    key: 'rtl',\n    unlocalizedText: 'Right to left',\n    iconName: 'BidiRtl',\n    onClick: editor => {\n        setDirection(editor, Direction.RightToLeft);\n    },\n};\n","import RibbonButton from '../../../plugins/RibbonPlugin/RibbonButton';\nimport { toggleStrikethrough } from 'roosterjs-editor-api';\n\n/**\n * \"Strikethrough\" button on the format ribbon\n */\nexport const strikethrough: RibbonButton = {\n    key: 'strikethrough',\n    unlocalizedText: 'Strikethrough',\n    iconName: 'Strikethrough',\n    checked: formatState => formatState.isStrikeThrough,\n    onClick: editor => {\n        toggleStrikethrough(editor);\n        return true;\n    },\n};\n","import RibbonButton from '../../../plugins/RibbonPlugin/RibbonButton';\nimport { toggleSubscript } from 'roosterjs-editor-api';\n\n/**\n * \"Subscript\" button on the format ribbon\n */\nexport const subscript: RibbonButton = {\n    key: 'subscript',\n    unlocalizedText: 'Subscript',\n    iconName: 'Subscript',\n    checked: formatState => formatState.isSubscript,\n    onClick: editor => {\n        toggleSubscript(editor);\n        return true;\n    },\n};\n","import RibbonButton from '../../../plugins/RibbonPlugin/RibbonButton';\nimport { toggleSubscript } from 'roosterjs-editor-api';\n\n/**\n * \"Superscript\" button on the format ribbon\n */\nexport const superscript: RibbonButton = {\n    key: 'superscript',\n    unlocalizedText: 'Superscript',\n    iconName: 'Superscript',\n    checked: formatState => formatState.isSuperscript,\n    onClick: editor => {\n        toggleSubscript(editor);\n        return true;\n    },\n};\n","import RibbonButton from '../../../plugins/RibbonPlugin/RibbonButton';\nimport { toggleUnderline } from 'roosterjs-editor-api';\n\n/**\n * \"Underline\" button on the format ribbon\n */\nexport const underline: RibbonButton = {\n    key: 'underline',\n    unlocalizedText: 'Underline',\n    iconName: 'Underline',\n    checked: formatState => formatState.isUnderline,\n    onClick: editor => {\n        toggleUnderline(editor);\n        return true;\n    },\n};\n","import RibbonButton from '../../../plugins/RibbonPlugin/RibbonButton';\n\n/**\n * \"Undo\" button on the format ribbon\n */\nexport const undo: RibbonButton = {\n    key: 'undo',\n    unlocalizedText: 'undo',\n    iconName: 'undo',\n    disabled: formatState => !formatState.canUndo,\n    onClick: editor => {\n        editor.undo();\n        return true;\n    },\n};\n","export * from './components/Rooster/index';\nexport * from './components/Ribbon/index';\n\nexport * from './plugins/UpdateContentPlugin/index';\nexport * from './plugins/RibbonPlugin/index';\n\nexport * from './utils/index';\n","export { default as Rooster } from './Rooster';\nexport { default as RoosterProps } from './RoosterProps';\n","import * as React from 'react';\nimport RoosterProps from './RoosterProps';\nimport { Editor } from 'roosterjs-editor-core';\nimport { EditorOptions, IEditor } from 'roosterjs-editor-types';\n\n/**\n * Main component of react wrapper for roosterjs\n * @param props Properties of this component\n * @returns The react component\n */\nexport default function Rooster(props: RoosterProps) {\n    const editorDiv = React.useRef<HTMLDivElement>(null);\n    const editor = React.useRef<IEditor>(null);\n\n    const { domAttributes, editorOptions, focusOnInit, editorCreator } = props;\n    const { zoomScale, inDarkMode } = editorOptions || {};\n\n    React.useEffect(() => {\n        editor.current = (editorCreator || defaultEditorCreator)(editorDiv.current, editorOptions);\n\n        if (focusOnInit) {\n            editor.current.focus();\n        }\n\n        return () => {\n            if (editor.current) {\n                editor.current.dispose();\n                editor.current = null;\n            }\n        };\n    }, [editorCreator]);\n\n    React.useEffect(() => {\n        editor.current.setDarkModeState(!!inDarkMode);\n    }, [inDarkMode]);\n\n    React.useEffect(() => {\n        editor.current.setZoomScale(zoomScale);\n    }, [zoomScale]);\n\n    return <div ref={editorDiv} tabIndex={0} {...(domAttributes || {})}></div>;\n}\n\nfunction defaultEditorCreator(div: HTMLDivElement, options: EditorOptions) {\n    return new Editor(div, options);\n}\n","export { default as Ribbon } from './Ribbon';\nexport { default as RibbonProps } from './RibbonProps';\nexport { default as getAllButtons } from './getAllButtons';\nexport { bold } from './buttons/bold';\nexport { italic } from './buttons/italic';\nexport { underline } from './buttons/underline';\nexport { font } from './buttons/font';\nexport { fontSize } from './buttons/fontSize';\nexport { bulletedList } from './buttons/bulletedList';\nexport { numberedList } from './buttons/numberedList';\nexport { decreaseIndent } from './buttons/decreaseIndent';\nexport { increaseIndent } from './buttons/increaseIndent';\nexport { quote } from './buttons/quote';\nexport { alignLeft } from './buttons/alignLeft';\nexport { alignCenter } from './buttons/alignCenter';\nexport { alignRight } from './buttons/alignRight';\nexport { superscript } from './buttons/superscript';\nexport { subscript } from './buttons/subscript';\nexport { strikethrough } from './buttons/strikethrough';\nexport { header } from './buttons/header';\nexport { code } from './buttons/code';\nexport { ltr } from './buttons/ltr';\nexport { rtl } from './buttons/rtl';\nexport { undo } from './buttons/undo';\nexport { redo } from './buttons/redo';\nexport { clearFormat } from './buttons/clearFormat';\n","import * as React from 'react';\nimport RibbonButton from '../../plugins/RibbonPlugin/RibbonButton';\nimport RibbonProps from './RibbonProps';\nimport { CommandBar, ICommandBarItemProps } from '@fluentui/react/lib/CommandBar';\nimport { FormatState } from 'roosterjs-editor-types';\nimport {\n    IContextualMenuItem,\n    IContextualMenuItemProps,\n    IContextualMenuItemRenderFunctions,\n} from '@fluentui/react/lib/ContextualMenu';\n\n/**\n * The format ribbon component of roosterjs-react\n * @param props Properties of format ribbon component\n * @returns The format ribbon component\n */\nexport default function Ribbon(props: RibbonProps) {\n    const { plugin, buttons, strings, isRtl } = props;\n    const [formatState, setFormatState] = React.useState<FormatState>(null);\n\n    const onClick = React.useCallback(\n        (_, item: IContextualMenuItem) => {\n            plugin?.onButtonClick(item.data as RibbonButton, item.key);\n        },\n        [plugin]\n    );\n\n    const onHover = React.useCallback(\n        (button: RibbonButton, key: string) => {\n            plugin.startLivePreview(button, key);\n        },\n        [plugin]\n    );\n\n    const onDismiss = React.useCallback(() => {\n        plugin.stopLivePreview();\n    }, [plugin]);\n\n    const commandBarItems = React.useMemo((): ICommandBarItemProps[] => {\n        return buttons.map(button => ({\n            key: button.key,\n            data: button,\n            iconProps: {\n                iconName: isRtl && button.rtlIconName ? button.rtlIconName : button.iconName,\n            },\n            iconOnly: true,\n            text: getButtonText(button.key, button.unlocalizedText, strings),\n            checked: (formatState && button.checked?.(formatState)) || false,\n            disabled: (formatState && button.disabled?.(formatState)) || false,\n            subMenuProps: button.dropDownItems\n                ? {\n                      onDismiss: onDismiss,\n                      onItemClick: onClick,\n                      items: Object.keys(button.dropDownItems).map(key => ({\n                          key: key,\n                          text: getButtonText(key, button.dropDownItems[key], strings),\n                          data: button,\n                          onRenderContent: button.allowLivePreview\n                              ? (menuItemProps, defaultRenderers) => (\n                                    <LivePreviewItem\n                                        menuItemProps={menuItemProps}\n                                        defaultRenderers={defaultRenderers}\n                                        onHover={onHover}\n                                    />\n                                )\n                              : undefined,\n                      })),\n                  }\n                : undefined,\n            onClick: button.dropDownItems ? undefined : onClick,\n        }));\n    }, [buttons, formatState, isRtl, strings, onClick, onDismiss, onHover]);\n\n    React.useEffect(() => {\n        const disposer = plugin?.registerFormatChangedCallback(setFormatState);\n\n        return () => {\n            disposer?.();\n        };\n    }, [plugin]);\n\n    return <CommandBar items={commandBarItems} dir={isRtl ? 'rtl' : 'ltr'} />;\n}\n\nfunction LivePreviewItem(props: {\n    menuItemProps: IContextualMenuItemProps;\n    defaultRenderers: IContextualMenuItemRenderFunctions;\n    onHover: (button: RibbonButton, key: string) => void;\n}) {\n    const { menuItemProps, defaultRenderers, onHover } = props;\n    return (\n        <div\n            onMouseOver={() => {\n                onHover(menuItemProps.item.data as RibbonButton, menuItemProps.item.key);\n            }}\n            style={{\n                width: '100%',\n                height: '36px',\n                overflow: 'hidden',\n            }}>\n            {defaultRenderers.renderItemName(menuItemProps)}\n        </div>\n    );\n}\n\nfunction getButtonText(\n    key: string,\n    unlocalizedText: string,\n    strings?: Record<string, string | (() => string)>\n) {\n    const str = strings?.[key];\n\n    if (typeof str == 'function') {\n        return str();\n    } else if (typeof str == 'string') {\n        return str;\n    } else {\n        return unlocalizedText;\n    }\n}\n","module.exports = FluentUIReact;","import RibbonButton from '../../plugins/RibbonPlugin/RibbonButton';\nimport { alignCenter } from './buttons/alignCenter';\nimport { alignLeft } from './buttons/alignLeft';\nimport { alignRight } from './buttons/alignRight';\nimport { bold } from './buttons/bold';\nimport { bulletedList } from './buttons/bulletedList';\nimport { clearFormat } from './buttons/clearFormat';\nimport { code } from './buttons/code';\nimport { decreaseIndent } from './buttons/decreaseIndent';\nimport { font } from './buttons/font';\nimport { fontSize } from './buttons/fontSize';\nimport { header } from './buttons/header';\nimport { increaseIndent } from './buttons/increaseIndent';\nimport { italic } from './buttons/italic';\nimport { ltr } from './buttons/ltr';\nimport { numberedList } from './buttons/numberedList';\nimport { quote } from './buttons/quote';\nimport { redo } from './buttons/redo';\nimport { rtl } from './buttons/rtl';\nimport { strikethrough } from './buttons/strikethrough';\nimport { subscript } from './buttons/subscript';\nimport { superscript } from './buttons/superscript';\nimport { underline } from './buttons/underline';\nimport { undo } from './buttons/undo';\n\n/**\n * A shortcut to get all format buttons provided by roosterjs-react\n * @returns An array of all buttons\n */\nexport default function getAllButtons(): RibbonButton[] {\n    return [\n        bold,\n        italic,\n        underline,\n        font,\n        fontSize,\n        bulletedList,\n        numberedList,\n        decreaseIndent,\n        increaseIndent,\n        quote,\n        alignLeft,\n        alignCenter,\n        alignRight,\n        superscript,\n        subscript,\n        strikethrough,\n        header,\n        code,\n        ltr,\n        rtl,\n        undo,\n        redo,\n        clearFormat,\n    ];\n}\n","export { UpdateMode } from './UpdateMode';\nexport { default as UpdateContentPlugin } from './UpdateContentPlugin';\n","import { EditorPlugin, IEditor, PluginEvent, PluginEventType } from 'roosterjs-editor-types';\nimport { UpdateMode } from './UpdateMode';\n\n/**\n * A plugin to help get HTML content from editor\n */\nexport default class UpdateContentPlugin implements EditorPlugin {\n    private editor: IEditor;\n    private disposer: () => void;\n\n    /**\n     * Create a new instance of UpdateContentPlugin class\n     * @param updateMode Mode of automatic update. It can be a combination of multiple UpdateMode values\n     * @param onUpdate A callback to be invoked when update happens\n     */\n    constructor(\n        private updateMode: UpdateMode,\n        private onUpdate: (html: string, mode: UpdateMode) => void\n    ) {}\n\n    /**\n     * Get a friendly name of this plugin\n     */\n    getName() {\n        return 'UpdateContent';\n    }\n\n    /**\n     * Initialize this plugin\n     * @param editor The editor instance\n     */\n    initialize(editor: IEditor) {\n        this.editor = editor;\n        this.disposer = this.editor.addDomEventHandler('blur', this.onBlur);\n    }\n\n    /**\n     * Dispose this plugin\n     */\n    dispose() {\n        this.disposer?.();\n        this.disposer = null;\n        this.editor = null;\n    }\n\n    /**\n     * Handle events triggered from editor\n     * @param event PluginEvent object\n     */\n    onPluginEvent(event: PluginEvent) {\n        switch (event.eventType) {\n            case PluginEventType.EditorReady:\n                this.update(UpdateMode.OnInitialize);\n                break;\n\n            case PluginEventType.BeforeDispose:\n                this.update(UpdateMode.OnDispose);\n                break;\n\n            case PluginEventType.ContentChanged:\n                this.update(UpdateMode.OnContentChangedEvent);\n                break;\n\n            case PluginEventType.Input:\n                this.update(UpdateMode.OnUserInput);\n                break;\n        }\n    }\n\n    /**\n     * Trigger a force update. onUpdate callback will be invoked with HTML content of editor\n     */\n    forceUpdate() {\n        this.update(UpdateMode.Force);\n    }\n\n    private onBlur = () => {\n        this.update(UpdateMode.OnBlur);\n    };\n\n    private update(mode: UpdateMode) {\n        if (\n            this.editor &&\n            (mode == UpdateMode.Force || ((this.updateMode || 0) & mode) == mode) &&\n            this.onUpdate\n        ) {\n            const content = this.editor.getContent();\n            this.onUpdate(content, mode);\n        }\n    }\n}\n","export { default as createRibbonPlugin } from './createRibbonPlugin';\nexport { default as IRibbonPlugin } from './IRibbonPlugin';\nexport { default as RibbonButton } from './RibbonButton';\n","import IRibbonPlugin from './IRibbonPlugin';\nimport RibbonButton from './RibbonButton';\nimport { FormatState, IEditor, PluginEvent, PluginEventType } from 'roosterjs-editor-types';\nimport { getFormatState } from 'roosterjs-editor-api';\n\n/**\n * A plugin to connect format ribbon component and the editor\n */\nclass RibbonPlugin implements IRibbonPlugin {\n    private editor: IEditor;\n    private onFormatChanged: (formatState: FormatState) => void;\n    private timer = 0;\n\n    /**\n     * Construct a new instance of RibbonPlugin object\n     * @param delayUpdateTime The time to wait before refresh the button when user do some editing operation in editor\n     */\n    constructor(private delayUpdateTime: number = 200) {}\n\n    /**\n     * Get a friendly name of this plugin\n     */\n    getName() {\n        return 'Ribbon';\n    }\n\n    /**\n     * Initialize this plugin\n     * @param editor The editor instance\n     */\n    initialize(editor: IEditor) {\n        this.editor = editor;\n    }\n\n    /**\n     * Dispose this plugin\n     */\n    dispose() {\n        this.editor = null;\n    }\n\n    /**\n     * Handle events triggered from editor\n     * @param event PluginEvent object\n     */\n    onPluginEvent(event: PluginEvent) {\n        switch (event.eventType) {\n            case PluginEventType.EditorReady:\n            case PluginEventType.ContentChanged:\n                this.updateFormat();\n                break;\n\n            case PluginEventType.KeyDown:\n            case PluginEventType.MouseDown:\n                this.delayUpdate();\n                break;\n        }\n    }\n\n    /**\n     * Register a callback to be invoked when format state of editor is changed, returns a disposer function.\n     */\n    registerFormatChangedCallback(callback: (formatState: FormatState) => void) {\n        this.onFormatChanged = callback;\n\n        return () => {\n            this.onFormatChanged = null;\n        };\n    }\n\n    /**\n     * When user clicks on a button, call this method to let the plugin to handle this click event\n     * @param button The button that is clicked\n     * @param key Key of child menu item that is clicked if any\n     */\n    onButtonClick(button: RibbonButton, key?: string) {\n        if (this.editor) {\n            this.editor.stopShadowEdit();\n\n            if (button.onClick(this.editor, key)) {\n                this.updateFormat();\n            }\n        }\n    }\n\n    /**\n     * Enter live preview state (shadow edit) of editor if there is a non-collapsed selection\n     * @param button The button that triggered this action\n     * @param key Key of the hovered button sub item\n     */\n    startLivePreview(button: RibbonButton, key: string) {\n        if (this.editor) {\n            const isInShadowEdit = this.editor.isInShadowEdit();\n\n            // If editor is already in shadow edit, no need to check again.\n            // And the check result may be incorrect because the content is changed from last shadow edit and the cached selection path won't apply\n            const range = !isInShadowEdit && this.editor.getSelectionRangeEx();\n\n            if (isInShadowEdit || (range && !range.areAllCollapsed)) {\n                this.editor.startShadowEdit();\n                button.onClick(this.editor, key);\n            }\n        }\n    }\n\n    /**\n     * Leave live preview state (shadow edit) of editor\n     */\n    stopLivePreview() {\n        this.editor?.stopShadowEdit();\n    }\n\n    private delayUpdate() {\n        const window = this.editor.getDocument().defaultView;\n\n        if (this.timer) {\n            window.clearTimeout(this.timer);\n        }\n\n        this.timer = window.setTimeout(() => {\n            this.timer = 0;\n            this.updateFormat?.();\n        }, this.delayUpdateTime);\n    }\n\n    private updateFormat() {\n        if (this.editor && this.onFormatChanged) {\n            const formatState = getFormatState(this.editor);\n            this.onFormatChanged(formatState);\n        }\n    }\n}\n\n/**\n * Create a new instance of RibbonPlugin object\n * @param delayUpdateTime The time to wait before refresh the button when user do some editing operation in editor\n */\nexport default function createRibbonPlugin(delayUpdateTime?: number): IRibbonPlugin {\n    return new RibbonPlugin(delayUpdateTime);\n}\n","export { LocalizedStrings, OkButtonStringKey, CancelButtonStringKey } from './LocalizedStrings';\nexport { default as getLocalizedString } from './getLocalizedString';\n","import { LocalizedStrings } from './LocalizedStrings';\n\n/**\n * Get a localized string\n * @param strings The LocalizedStrings map\n * @param key Key of the string\n * @param defaultString Default unlocalized string, will be used if strings is not specified or the give key doesn't exist in strings\n * @returns A localized string from the string map, or defaultString\n */\nexport default function getLocalizedString<T extends string>(\n    strings: Partial<LocalizedStrings<T>>,\n    key: T,\n    defaultString: string\n) {\n    const str = strings?.[key];\n\n    if (typeof str == 'function') {\n        return str();\n    } else if (typeof str == 'string') {\n        return str;\n    } else {\n        return defaultString;\n    }\n}\n"],"sourceRoot":""}